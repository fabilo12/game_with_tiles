{"ast":null,"code":"import getRandomInt from '../js_utils/getRandomInt.js';\nimport fillRepos from './fillRepos.js'; //global settings\n\nconst N_COLORS = 5;\nconst TILES_PER_REPO = 4;\nconst TILES_PER_COLOR = 20;\nconst EMPTY_TILE_FIELD = -1;\nconst NAME_LIST_DEFAULT = ['Player 1', 'Player 2', 'Player 3', 'Player 4'];\nconst NUM_PLAYER_DEFAULT = 2;\nexport default function gameState(playerList) {\n  playerList = typeof playerList === 'undefined'; //game hyperparameters\n\n  this.nColor = N_COLORS;\n  this.tilesPerRepo = TILES_PER_REPO;\n  this.tilesPerColor = TILES_PER_COLOR;\n  this.emptyTileField = EMPTY_TILE_FIELD;\n  this.nameListDefault = NAME_LIST_DEFAULT;\n  this.numPlayerDefault = NUM_PLAYER_DEFAULT; //state shared between players\n\n  this.nameListInput = [...playerList];\n  this.playerList = [...playerList];\n  this.numPlayerSelected = playerList.length;\n  this.nPlayer = playerList.length;\n  this.nRepos = 2 * this.nPlayer + 1;\n  this.isGameOver = false;\n  this.bag = Array.from(Array(N_COLORS), (_, i) => Array(TILES_PER_COLOR).fill(i)).flat();\n  this.usedTiles = [];\n  this.repos = Array(this.nRepos).fill().map(_ => Array(TILES_PER_REPO).fill(EMPTY_TILE_FIELD));\n  this.repos[this.nRepos] = []; //last repo is 'the middle', initially empty;\n\n  this.startingTile = 'middle';\n  this.playerAtTurn = getRandomInt(0, this.nPlayer)[0];\n  this.playMode = \"predefined\";\n  this.wallPattern = Array.from(Array(N_COLORS), (_, j) => Array.from(Array(N_COLORS), (_, i) => (N_COLORS - i + j) % N_COLORS)); //player specific state\n\n  this.scores = Array(this.nPlayer).fill(0);\n  this.rows = Array(this.nPlayer).fill().map(_ => Array.from(Array(N_COLORS), (_, i) => Array(i + 1).fill(EMPTY_TILE_FIELD)));\n  this.wall = Array(this.nPlayer).fill().map(_ => Array.from(Array(N_COLORS), _ => Array(N_COLORS).fill(EMPTY_TILE_FIELD)));\n  this.penalties = Array(this.nPlayer).fill().map(_ => []); //fill repos separately to facilitate reuse of fillRepos\n\n  const filledRepoState = fillRepos(this);\n  this.repos = filledRepoState.repos;\n  this.bag = filledRepoState.bag;\n  this.usedTiles = filledRepoState.usedTiles;\n}\n;","map":{"version":3,"names":["getRandomInt","fillRepos","N_COLORS","TILES_PER_REPO","TILES_PER_COLOR","EMPTY_TILE_FIELD","NAME_LIST_DEFAULT","NUM_PLAYER_DEFAULT","gameState","playerList","nColor","tilesPerRepo","tilesPerColor","emptyTileField","nameListDefault","numPlayerDefault","nameListInput","numPlayerSelected","length","nPlayer","nRepos","isGameOver","bag","Array","from","_","i","fill","flat","usedTiles","repos","map","startingTile","playerAtTurn","playMode","wallPattern","j","scores","rows","wall","penalties","filledRepoState"],"sources":["/home/lorenz/programming/azul_create_react_app/src/azul_lib/gameState.js"],"sourcesContent":["import getRandomInt from '../js_utils/getRandomInt.js';\nimport fillRepos from './fillRepos.js'\n\n//global settings\nconst N_COLORS = 5;\nconst TILES_PER_REPO = 4;\nconst TILES_PER_COLOR = 20;\nconst EMPTY_TILE_FIELD = -1;\nconst NAME_LIST_DEFAULT = ['Player 1', 'Player 2', 'Player 3', 'Player 4'];\nconst NUM_PLAYER_DEFAULT = 2;\n\nexport default function gameState(\n\tplayerList\n) {\n\tplayerList = (typeof(playerList) === 'undefined');\n\n\t//game hyperparameters\n\tthis.nColor = N_COLORS;\n\tthis.tilesPerRepo = TILES_PER_REPO;\n\tthis.tilesPerColor = TILES_PER_COLOR;\n\tthis.emptyTileField = EMPTY_TILE_FIELD;\n\tthis.nameListDefault = NAME_LIST_DEFAULT;\n\tthis.numPlayerDefault = NUM_PLAYER_DEFAULT;\n\n\t//state shared between players\n\tthis.nameListInput = [...playerList];\n\tthis.playerList = [...playerList];\n\tthis.numPlayerSelected = playerList.length;\n\tthis.nPlayer = playerList.length;\n\tthis.nRepos = 2 * this.nPlayer + 1;\n\tthis.isGameOver = false;\n\tthis.bag = Array.from(\n\t\tArray(N_COLORS), (_, i) => Array(TILES_PER_COLOR).fill(i)\n\t).flat();\n\tthis.usedTiles = [];\n\tthis.repos = Array(this.nRepos).fill().map(\n\t\t_ => Array(TILES_PER_REPO).fill(EMPTY_TILE_FIELD)\n\t);\n\tthis.repos[this.nRepos] = [];//last repo is 'the middle', initially empty;\n\tthis.startingTile = 'middle';\n\tthis.playerAtTurn = getRandomInt(0, this.nPlayer)[0];\n\tthis.playMode = \"predefined\";\n\tthis.wallPattern = Array.from(\n\t\tArray(N_COLORS),\n\t\t(_, j) => Array.from(\n\t\t\tArray(N_COLORS),\n\t\t\t(_, i) => (N_COLORS - i + j) % N_COLORS\n\t\t)\n\t);\n\n\t//player specific state\n\tthis.scores = Array(this.nPlayer).fill(0);\n\tthis.rows = Array(this.nPlayer).fill().map(\n\t\t_ => Array.from(\n\t\t\tArray(N_COLORS), (_, i) => Array(i + 1).fill(EMPTY_TILE_FIELD)\n\t\t)\n\t);\n\tthis.wall = Array(this.nPlayer).fill().map(\n\t\t_ => Array.from(\n\t\t\tArray(N_COLORS), _ => Array(N_COLORS).fill(EMPTY_TILE_FIELD)\n\t\t)\n\t);\n\tthis.penalties = Array(this.nPlayer).fill().map(_ => []);\n\n\t//fill repos separately to facilitate reuse of fillRepos\n\tconst filledRepoState = fillRepos(this);\n\tthis.repos = filledRepoState.repos;\n\tthis.bag = filledRepoState.bag;\n\tthis.usedTiles = filledRepoState.usedTiles;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}