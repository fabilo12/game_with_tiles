{"ast":null,"code":"var _jsxFileName = \"/home/lorenz/programming/azul_create_react_app/src/components/NameInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { Context } from './Store.js';\nimport './NameInput.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NameInput(props) {\n  _s();\n\n  const [state, dispatch] = useContext(Context);\n  /*\n  if (!state.isGameOver) {\n      return\n  }\n  */\n\n  return [...Array(Number(props.numInputs)).keys()].map(el => /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: 'name' + el,\n      children: [\"Name of Player \", (el + 1).toString(), \":\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: 'name' + el,\n      value: state.nameListInput[el],\n      name: 'name' + el,\n      onChange: e => dispatch({\n        type: 'SET_NAME',\n        payload: {\n          player: el,\n          playerName: e.target.value\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 21\n    }, this)]\n  }, el, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 17\n  }, this));\n}\n\n_s(NameInput, \"R/iqDjZuP7G94n7Hryyh+IyzlJk=\");\n\n_c = NameInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"NameInput\");","map":{"version":3,"names":["React","useContext","Context","NameInput","props","state","dispatch","Array","Number","numInputs","keys","map","el","toString","nameListInput","e","type","payload","player","playerName","target","value"],"sources":["/home/lorenz/programming/azul_create_react_app/src/components/NameInput.js"],"sourcesContent":["import React, { useContext } from 'react'\nimport { Context } from './Store.js'\nimport './NameInput.css'\n\nexport default function NameInput(props) {\n\n\tconst [state, dispatch] = useContext(Context);\n\n    /*\n    if (!state.isGameOver) {\n        return\n    }\n    */\n\n    return (\n        [...Array(Number(props.numInputs)).keys()].map(\n            el => (\n                <React.Fragment key={el}>\n                    <label \n                        htmlFor={'name' + el}\n                    >Name of Player {(el + 1).toString()}:</label>\n                    <input \n                        type='text' \n                        id={'name' + el} \n                        value={state.nameListInput[el]}\n                        name={'name' + el}\n                        onChange={\n                            e => dispatch({\n                                type: 'SET_NAME',\n                                payload: {\n                                    player: el,\n                                    playerName: e.target.value,\n                                }\n                            })\n                        }\n                    />\n                </React.Fragment>\n            )\n        )\n    )\n}"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,OAAO,iBAAP;;AAEA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;EAAA;;EAExC,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,UAAU,CAACC,OAAD,CAApC;EAEG;AACJ;AACA;AACA;AACA;;EAEI,OACI,CAAC,GAAGK,KAAK,CAACC,MAAM,CAACJ,KAAK,CAACK,SAAP,CAAP,CAAL,CAA+BC,IAA/B,EAAJ,EAA2CC,GAA3C,CACIC,EAAE,iBACE,QAAC,KAAD,CAAO,QAAP;IAAA,wBACI;MACI,OAAO,EAAE,SAASA,EADtB;MAAA,8BAEiB,CAACA,EAAE,GAAG,CAAN,EAASC,QAAT,EAFjB;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAII;MACI,IAAI,EAAC,MADT;MAEI,EAAE,EAAE,SAASD,EAFjB;MAGI,KAAK,EAAEP,KAAK,CAACS,aAAN,CAAoBF,EAApB,CAHX;MAII,IAAI,EAAE,SAASA,EAJnB;MAKI,QAAQ,EACJG,CAAC,IAAIT,QAAQ,CAAC;QACVU,IAAI,EAAE,UADI;QAEVC,OAAO,EAAE;UACLC,MAAM,EAAEN,EADH;UAELO,UAAU,EAAEJ,CAAC,CAACK,MAAF,CAASC;QAFhB;MAFC,CAAD;IANrB;MAAA;MAAA;MAAA;IAAA,QAJJ;EAAA,GAAqBT,EAArB;IAAA;IAAA;IAAA;EAAA,QAFR,CADJ;AA0BH;;GApCuBT,S;;KAAAA,S"},"metadata":{},"sourceType":"module"}