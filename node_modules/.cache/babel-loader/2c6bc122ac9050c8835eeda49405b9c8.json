{"ast":null,"code":"var _jsxFileName = \"/home/lorenz/programming/azul_create_react_app/src/components/TileField.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { Context } from './Store.js';\nimport './TileField.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TileField(props) {\n  _s();\n\n  const type = props.type ? props.type : 'tile-field';\n  const row = props.row ? props.row : '';\n  const column = props.column ? props.column : '';\n  const parentRepo = props.repo ? props.repo : '';\n  const parentRow = props.row ? props.row : '';\n  const [state, dispatch] = useContext(Context);\n  const occcupState = props.tileColor === state.emptyTileField ? 'empty' : 'occupied tile-color-' + props.tileColor;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: [type, row, column, occcupState].join(' '),\n    onClick: () => dispatch({\n      type: 'DRAW_TILES',\n      payload: {\n        color: props.tileColor,\n        repo: parentRepo\n      }\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TileField, \"R/iqDjZuP7G94n7Hryyh+IyzlJk=\");\n\n_c = TileField;\nexport default TileField;\n\nvar _c;\n\n$RefreshReg$(_c, \"TileField\");","map":{"version":3,"names":["React","useContext","Context","TileField","props","type","row","column","parentRepo","repo","parentRow","state","dispatch","occcupState","tileColor","emptyTileField","join","payload","color"],"sources":["/home/lorenz/programming/azul_create_react_app/src/components/TileField.js"],"sourcesContent":["import React, { useContext } from 'react';\nimport {Context} from './Store.js'\nimport './TileField.css';\n\n\nfunction TileField(props) {\n  const type = props.type ? props.type : 'tile-field';\n  const row = props.row ? props.row : '';\n  const column = props.column ? props.column : '';\n  const parentRepo = props.repo ? props.repo : '';\n  const parentRow = props.row ? props.row : '';\n  \n  const [state, dispatch] = useContext(Context);\n  \n  const occcupState = props.tileColor===state.emptyTileField\n    ? 'empty'\n    : 'occupied tile-color-' + props.tileColor;\n\n  return (\n    <button \n    className={[type, row, column, occcupState].join(' ')}\n    onClick={() => dispatch({\n      type: 'DRAW_TILES',\n      payload: {\n        color: props.tileColor,\n        repo: parentRepo,\n      },\n    })}\n    ></button>\n  )\n}\n\nexport default TileField"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAAQC,OAAR,QAAsB,YAAtB;AACA,OAAO,iBAAP;;;AAGA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;EAAA;;EACxB,MAAMC,IAAI,GAAGD,KAAK,CAACC,IAAN,GAAaD,KAAK,CAACC,IAAnB,GAA0B,YAAvC;EACA,MAAMC,GAAG,GAAGF,KAAK,CAACE,GAAN,GAAYF,KAAK,CAACE,GAAlB,GAAwB,EAApC;EACA,MAAMC,MAAM,GAAGH,KAAK,CAACG,MAAN,GAAeH,KAAK,CAACG,MAArB,GAA8B,EAA7C;EACA,MAAMC,UAAU,GAAGJ,KAAK,CAACK,IAAN,GAAaL,KAAK,CAACK,IAAnB,GAA0B,EAA7C;EACA,MAAMC,SAAS,GAAGN,KAAK,CAACE,GAAN,GAAYF,KAAK,CAACE,GAAlB,GAAwB,EAA1C;EAEA,MAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBX,UAAU,CAACC,OAAD,CAApC;EAEA,MAAMW,WAAW,GAAGT,KAAK,CAACU,SAAN,KAAkBH,KAAK,CAACI,cAAxB,GAChB,OADgB,GAEhB,yBAAyBX,KAAK,CAACU,SAFnC;EAIA,oBACE;IACA,SAAS,EAAE,CAACT,IAAD,EAAOC,GAAP,EAAYC,MAAZ,EAAoBM,WAApB,EAAiCG,IAAjC,CAAsC,GAAtC,CADX;IAEA,OAAO,EAAE,MAAMJ,QAAQ,CAAC;MACtBP,IAAI,EAAE,YADgB;MAEtBY,OAAO,EAAE;QACPC,KAAK,EAAEd,KAAK,CAACU,SADN;QAEPL,IAAI,EAAED;MAFC;IAFa,CAAD;EAFvB;IAAA;IAAA;IAAA;EAAA,QADF;AAYD;;GAzBQL,S;;KAAAA,S;AA2BT,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}