{"ast":null,"code":"import addArrays from '../js_utils/addArrays.js';\nimport tileColToDist from '../azul_lib/tileColToDist.js';\nexport default function putTilesIntoRow(state, payload) {\n  const newState = { ...state\n  };\n  const drawn = newState.repos[newState.selectedTiles.repo].filter(el => el === newState.selectedTiles.color);\n  const rest = tileColToDist(newState.repos[newState.selectedTiles.repo].filter(el => el !== newState.selectedTiles.color));\n  const targetRow = newState.rows[newState.playerAtTurn][payload.row];\n  const newTargetRow = addDrawnToTarget(drawn, targetRow, newState.emptyTileField);\n  newState.rows[newState.playerAtTurn][payload.row] = newTargetRow.newRow;\n  newState.penalties[newState.playerAtTurn] = addArrays(newState.penalties[newState.playerAtTurn], newTargetRow.penalties);\n  newState.repos[newState.selectedTiles.repo] = Array(newState.tilesPerRepo).fill(newState.emptyTileField);\n  newState.middle = newState.middle;\n  return newState;\n}\n\nfunction addDrawnToTarget(drawn, targetRow, emptyTileField) {\n  const nTileInRow = targetRow.filter(el => el === drawn[0]).length;\n  const nDrawn = drawn.length;\n  const auxFilled = Array(Math.min(nTileInRow + nDrawn, targetRow.length)).fill(drawn[0]);\n  const auxEmpty = Array(targetRow.length - auxFilled.length).fill(emptyTileField);\n  return {\n    newRow: auxFilled.concat(auxEmpty),\n    penalties: tileColToDist(Array(nDrawn - (targetRow.length - nTileInRow)).fill(drawn[0]))\n  };\n} //function checkTargetValidity(selectedColor,targetColor,wall) {\n//\n//}\n\n/*if (newState.drawn.length > 0) {\n\tif (payload.repo === 'middle') {\n\t\tnewState[payload.repo] = Array(newState.nColors).fill(0);\n\t\tif (newState.startingTile === 'middle') {\n\t\t\tnewState.startingTile = newState.playerAtTurn;\n\t\t}\n\t} else {\n\t\tnewState.middle = addArrays(newState.middle, tileColToDist(tiles.filter(c => c !== color)));\n\t\tnewState[payload.repo] = [];\n\t}\n\treturn newState;\n} else {\n\talert(payload.repo + \" contains no tile of color \" + color.toString() + \"!\");\n}*/","map":{"version":3,"names":["addArrays","tileColToDist","putTilesIntoRow","state","payload","newState","drawn","repos","selectedTiles","repo","filter","el","color","rest","targetRow","rows","playerAtTurn","row","newTargetRow","addDrawnToTarget","emptyTileField","newRow","penalties","Array","tilesPerRepo","fill","middle","nTileInRow","length","nDrawn","auxFilled","Math","min","auxEmpty","concat"],"sources":["/home/lorenz/programming/azul_create_react_app/src/reducer/putTilesIntoRow.js"],"sourcesContent":["import addArrays from '../js_utils/addArrays.js'\nimport tileColToDist from '../azul_lib/tileColToDist.js'\n\nexport default function putTilesIntoRow(state, payload) {\n\n\tconst newState = { ...state };\n\n\tconst drawn = newState.repos[newState.selectedTiles.repo].filter(el => el===newState.selectedTiles.color);\n\tconst rest = tileColToDist(newState.repos[newState.selectedTiles.repo].filter(el => el!==newState.selectedTiles.color));\n\tconst targetRow = newState.rows[newState.playerAtTurn][payload.row];\n\tconst newTargetRow = addDrawnToTarget(drawn, targetRow, newState.emptyTileField);\n\n\tnewState.rows[newState.playerAtTurn][payload.row] = newTargetRow.newRow;\n\tnewState.penalties[newState.playerAtTurn] = addArrays(newState.penalties[newState.playerAtTurn],newTargetRow.penalties);\n\tnewState.repos[newState.selectedTiles.repo] = Array(newState.tilesPerRepo).fill(newState.emptyTileField);\n\tnewState.middle = newState.middle\n\n\treturn newState\n}\n\nfunction addDrawnToTarget(drawn, targetRow, emptyTileField) {\n\tconst nTileInRow = targetRow.filter(el => el===drawn[0]).length;\n\tconst nDrawn = drawn.length;\n\tconst auxFilled = Array(Math.min(nTileInRow+nDrawn,targetRow.length)).fill(drawn[0]);\n\tconst auxEmpty = Array(targetRow.length-auxFilled.length).fill(emptyTileField);\n\treturn {\n\t\tnewRow: auxFilled.concat(auxEmpty),\n\t\tpenalties: tileColToDist(Array(nDrawn-(targetRow.length-nTileInRow)).fill(drawn[0])),\n\t}\n}\n\n//function checkTargetValidity(selectedColor,targetColor,wall) {\n//\n//}\n\n/*if (newState.drawn.length > 0) {\n\tif (payload.repo === 'middle') {\n\t\tnewState[payload.repo] = Array(newState.nColors).fill(0);\n\t\tif (newState.startingTile === 'middle') {\n\t\t\tnewState.startingTile = newState.playerAtTurn;\n\t\t}\n\t} else {\n\t\tnewState.middle = addArrays(newState.middle, tileColToDist(tiles.filter(c => c !== color)));\n\t\tnewState[payload.repo] = [];\n\t}\n\treturn newState;\n} else {\n\talert(payload.repo + \" contains no tile of color \" + color.toString() + \"!\");\n}*/"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,0BAAtB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AAEA,eAAe,SAASC,eAAT,CAAyBC,KAAzB,EAAgCC,OAAhC,EAAyC;EAEvD,MAAMC,QAAQ,GAAG,EAAE,GAAGF;EAAL,CAAjB;EAEA,MAAMG,KAAK,GAAGD,QAAQ,CAACE,KAAT,CAAeF,QAAQ,CAACG,aAAT,CAAuBC,IAAtC,EAA4CC,MAA5C,CAAmDC,EAAE,IAAIA,EAAE,KAAGN,QAAQ,CAACG,aAAT,CAAuBI,KAArF,CAAd;EACA,MAAMC,IAAI,GAAGZ,aAAa,CAACI,QAAQ,CAACE,KAAT,CAAeF,QAAQ,CAACG,aAAT,CAAuBC,IAAtC,EAA4CC,MAA5C,CAAmDC,EAAE,IAAIA,EAAE,KAAGN,QAAQ,CAACG,aAAT,CAAuBI,KAArF,CAAD,CAA1B;EACA,MAAME,SAAS,GAAGT,QAAQ,CAACU,IAAT,CAAcV,QAAQ,CAACW,YAAvB,EAAqCZ,OAAO,CAACa,GAA7C,CAAlB;EACA,MAAMC,YAAY,GAAGC,gBAAgB,CAACb,KAAD,EAAQQ,SAAR,EAAmBT,QAAQ,CAACe,cAA5B,CAArC;EAEAf,QAAQ,CAACU,IAAT,CAAcV,QAAQ,CAACW,YAAvB,EAAqCZ,OAAO,CAACa,GAA7C,IAAoDC,YAAY,CAACG,MAAjE;EACAhB,QAAQ,CAACiB,SAAT,CAAmBjB,QAAQ,CAACW,YAA5B,IAA4ChB,SAAS,CAACK,QAAQ,CAACiB,SAAT,CAAmBjB,QAAQ,CAACW,YAA5B,CAAD,EAA2CE,YAAY,CAACI,SAAxD,CAArD;EACAjB,QAAQ,CAACE,KAAT,CAAeF,QAAQ,CAACG,aAAT,CAAuBC,IAAtC,IAA8Cc,KAAK,CAAClB,QAAQ,CAACmB,YAAV,CAAL,CAA6BC,IAA7B,CAAkCpB,QAAQ,CAACe,cAA3C,CAA9C;EACAf,QAAQ,CAACqB,MAAT,GAAkBrB,QAAQ,CAACqB,MAA3B;EAEA,OAAOrB,QAAP;AACA;;AAED,SAASc,gBAAT,CAA0Bb,KAA1B,EAAiCQ,SAAjC,EAA4CM,cAA5C,EAA4D;EAC3D,MAAMO,UAAU,GAAGb,SAAS,CAACJ,MAAV,CAAiBC,EAAE,IAAIA,EAAE,KAAGL,KAAK,CAAC,CAAD,CAAjC,EAAsCsB,MAAzD;EACA,MAAMC,MAAM,GAAGvB,KAAK,CAACsB,MAArB;EACA,MAAME,SAAS,GAAGP,KAAK,CAACQ,IAAI,CAACC,GAAL,CAASL,UAAU,GAACE,MAApB,EAA2Bf,SAAS,CAACc,MAArC,CAAD,CAAL,CAAoDH,IAApD,CAAyDnB,KAAK,CAAC,CAAD,CAA9D,CAAlB;EACA,MAAM2B,QAAQ,GAAGV,KAAK,CAACT,SAAS,CAACc,MAAV,GAAiBE,SAAS,CAACF,MAA5B,CAAL,CAAyCH,IAAzC,CAA8CL,cAA9C,CAAjB;EACA,OAAO;IACNC,MAAM,EAAES,SAAS,CAACI,MAAV,CAAiBD,QAAjB,CADF;IAENX,SAAS,EAAErB,aAAa,CAACsB,KAAK,CAACM,MAAM,IAAEf,SAAS,CAACc,MAAV,GAAiBD,UAAnB,CAAP,CAAL,CAA4CF,IAA5C,CAAiDnB,KAAK,CAAC,CAAD,CAAtD,CAAD;EAFlB,CAAP;AAIA,C,CAED;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}