{"ast":null,"code":"import getRandomInt from '../js_utils/getRandomInt.js';\nimport tileColSplitter from './tileColSplitter.js';\nexport default function fillRepos(state) {\n  const newState = { ...state\n  };\n\n  for (let i in newState.repos) {\n    let repoFilled = missingTilesInRepo(newState, i) === 0;\n\n    while (!repoFilled) {\n      const randId = getRandomInt(0, newState.bag.length, missingTilesInRepo(newState, i));\n      const splittedBag = tileColSplitter(newState.bag, randId);\n      newState.repos[i] = splittedBag.drawn;\n      newState.bag = splittedBag.rest;\n      const bagHasEnoughTiles = newState.bag.length >= newState.tilesPerRepo;\n\n      if (bagHasEnoughTiles) {\n        const mutatedProps = refillBag(newState);\n        newState.bag = mutatedProps.bag;\n        newState.usedTiles = mutatedProps.usedTiles;\n      } else {\n        repoFilled = true;\n      }\n    }\n  }\n\n  return newState;\n}\n\nfunction refillBag(st) {\n  return {\n    bag: st.usedTiles,\n    usedTiles: []\n  };\n}\n\nfunction missingTilesInRepo(st, i) {\n  const actualTiles = st.repos[i].filter(el => el !== st.emptyTileField).length;\n  const targetTiles = st.tilesPerRepo;\n  return targetTiles - actualTiles;\n}","map":{"version":3,"names":["getRandomInt","tileColSplitter","fillRepos","state","newState","i","repos","repoFilled","missingTilesInRepo","randId","bag","length","splittedBag","drawn","rest","bagHasEnoughTiles","tilesPerRepo","mutatedProps","refillBag","usedTiles","st","actualTiles","filter","el","emptyTileField","targetTiles"],"sources":["/home/lorenz/programming/azul_create_react_app/src/azul_lib/fillRepos.js"],"sourcesContent":["import getRandomInt from '../js_utils/getRandomInt.js'\nimport tileColSplitter from './tileColSplitter.js'\n\nexport default function fillRepos(state) {\n\n\tconst newState = { ...state };\n\n\tfor (let i in newState.repos) {\n\t\tlet repoFilled = (missingTilesInRepo(newState,i)===0);\n\t\twhile (!repoFilled) {\n\t\t\tconst randId = getRandomInt(\n\t\t\t\t0,\n\t\t\t\tnewState.bag.length,\n\t\t\t\tmissingTilesInRepo(newState,i)\n\t\t\t);\n\t\t\tconst splittedBag = tileColSplitter(newState.bag, randId);\n\t\t\tnewState.repos[i] = splittedBag.drawn;\n\t\t\tnewState.bag = splittedBag.rest;\n\t\t\tconst bagHasEnoughTiles = (newState.bag.length >= newState.tilesPerRepo);\n\t\t\tif (bagHasEnoughTiles) {\n\t\t\t\tconst mutatedProps = refillBag(newState);\n\t\t\t\tnewState.bag = mutatedProps.bag;\n\t\t\t\tnewState.usedTiles = mutatedProps.usedTiles;\n\t\t\t} else {\n\t\t\t\trepoFilled = true;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn newState\n}\n\nfunction refillBag(st) {\n\treturn (\n\t\t{\n\t\t\tbag: st.usedTiles,\n\t\t\tusedTiles: [],\n\t\t}\n\t)\n}\n\nfunction missingTilesInRepo(st,i) {\n\tconst actualTiles = st.repos[i].filter(el => el !== st.emptyTileField).length;\n\tconst targetTiles = st.tilesPerRepo;\n\treturn targetTiles-actualTiles\n}"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,6BAAzB;AACA,OAAOC,eAAP,MAA4B,sBAA5B;AAEA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;EAExC,MAAMC,QAAQ,GAAG,EAAE,GAAGD;EAAL,CAAjB;;EAEA,KAAK,IAAIE,CAAT,IAAcD,QAAQ,CAACE,KAAvB,EAA8B;IAC7B,IAAIC,UAAU,GAAIC,kBAAkB,CAACJ,QAAD,EAAUC,CAAV,CAAlB,KAAiC,CAAnD;;IACA,OAAO,CAACE,UAAR,EAAoB;MACnB,MAAME,MAAM,GAAGT,YAAY,CAC1B,CAD0B,EAE1BI,QAAQ,CAACM,GAAT,CAAaC,MAFa,EAG1BH,kBAAkB,CAACJ,QAAD,EAAUC,CAAV,CAHQ,CAA3B;MAKA,MAAMO,WAAW,GAAGX,eAAe,CAACG,QAAQ,CAACM,GAAV,EAAeD,MAAf,CAAnC;MACAL,QAAQ,CAACE,KAAT,CAAeD,CAAf,IAAoBO,WAAW,CAACC,KAAhC;MACAT,QAAQ,CAACM,GAAT,GAAeE,WAAW,CAACE,IAA3B;MACA,MAAMC,iBAAiB,GAAIX,QAAQ,CAACM,GAAT,CAAaC,MAAb,IAAuBP,QAAQ,CAACY,YAA3D;;MACA,IAAID,iBAAJ,EAAuB;QACtB,MAAME,YAAY,GAAGC,SAAS,CAACd,QAAD,CAA9B;QACAA,QAAQ,CAACM,GAAT,GAAeO,YAAY,CAACP,GAA5B;QACAN,QAAQ,CAACe,SAAT,GAAqBF,YAAY,CAACE,SAAlC;MACA,CAJD,MAIO;QACNZ,UAAU,GAAG,IAAb;MACA;IACD;EACD;;EAED,OAAOH,QAAP;AACA;;AAED,SAASc,SAAT,CAAmBE,EAAnB,EAAuB;EACtB,OACC;IACCV,GAAG,EAAEU,EAAE,CAACD,SADT;IAECA,SAAS,EAAE;EAFZ,CADD;AAMA;;AAED,SAASX,kBAAT,CAA4BY,EAA5B,EAA+Bf,CAA/B,EAAkC;EACjC,MAAMgB,WAAW,GAAGD,EAAE,CAACd,KAAH,CAASD,CAAT,EAAYiB,MAAZ,CAAmBC,EAAE,IAAIA,EAAE,KAAKH,EAAE,CAACI,cAAnC,EAAmDb,MAAvE;EACA,MAAMc,WAAW,GAAGL,EAAE,CAACJ,YAAvB;EACA,OAAOS,WAAW,GAACJ,WAAnB;AACA"},"metadata":{},"sourceType":"module"}