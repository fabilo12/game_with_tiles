{"ast":null,"code":"var _jsxFileName = \"/home/lorenz/programming/azul_create_react_app/src/Store.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useReducer } from 'react';\nimport Reducer from './Reducer';\nimport { getRandomInt } from './utils.js';\nimport matchState from './matchState.js';\n/*\nconst TILES_PER_REPO = 4;\nconst N_COLORS = 5;\nconst TILES_PER_COLOR = 20;\nconst EMPTY_TILE_FIELD = -1;\n\nconst playerList = ['player1', 'player2', 'player3', 'player4'];\nconst nPlayer = playerList.length;\nconst nRepos = 2 * nPlayer + 1;\n\nconst initialState = {\n\tnColor: N_COLORS,\n\tnTilesPerRepo: TILES_PER_REPO,\n\ttilesPerColor: TILES_PER_COLOR,\n\temptyTileField: EMPTY_TILE_FIELD,\n\tplayerList: playerList,\n\tnPlayer: nPlayer,\n    nRepos: nRepos,\n\tscores: Array(nPlayer).fill(0),\n\trows: Array(nPlayer).fill(Array.from(Array(N_COLORS), (x,i) => Array(i+1).fill(EMPTY_TILE_FIELD))),\n\twall: Array(nPlayer).fill(Array.from(Array(N_COLORS), x => Array(N_COLORS).fill(EMPTY_TILE_FIELD))),\n\tpenalties: Array(nPlayer).fill(Array(N_COLORS).fill(0)),\n\tbag: Array(N_COLORS).fill(TILES_PER_COLOR),\n\tusedTiles: Array(N_COLORS).fill(0),\n\tmiddle: Array(N_COLORS).fill(0),\n\trepos: Array(nRepos).fill(Array(TILES_PER_REPO).fill(EMPTY_TILE_FIELD)),\n\tstartingTile: 'middle',\n\tplayerAtTurn: getRandomInt(0, nPlayer),\n\tplayMode: \"predefined\",\n\twallPattern: Array.from(\n\t\tArray(N_COLORS),\n\t\t(y, j) => Array.from(\n\t\t\tArray(N_COLORS),\n\t\t\t(x, i) => (N_COLORS - i + j) % N_COLORS\n\t\t)\n\t),\n};\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ninitialState = new matchState();\n\nconst Store = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(Reducer, initialState);\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: [state, dispatch],\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Store, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = Store;\nexport const Context = /*#__PURE__*/createContext(initialState);\nexport default Store;\n\nvar _c;\n\n$RefreshReg$(_c, \"Store\");","map":{"version":3,"names":["React","createContext","useReducer","Reducer","getRandomInt","matchState","initialState","Store","children","state","dispatch","Context"],"sources":["/home/lorenz/programming/azul_create_react_app/src/Store.js"],"sourcesContent":["import React, { createContext, useReducer } from 'react';\nimport Reducer from './Reducer'\nimport { getRandomInt } from './utils.js'\nimport matchState from './matchState.js'\n\n/*\nconst TILES_PER_REPO = 4;\nconst N_COLORS = 5;\nconst TILES_PER_COLOR = 20;\nconst EMPTY_TILE_FIELD = -1;\n\nconst playerList = ['player1', 'player2', 'player3', 'player4'];\nconst nPlayer = playerList.length;\nconst nRepos = 2 * nPlayer + 1;\n\nconst initialState = {\n\tnColor: N_COLORS,\n\tnTilesPerRepo: TILES_PER_REPO,\n\ttilesPerColor: TILES_PER_COLOR,\n\temptyTileField: EMPTY_TILE_FIELD,\n\tplayerList: playerList,\n\tnPlayer: nPlayer,\n    nRepos: nRepos,\n\tscores: Array(nPlayer).fill(0),\n\trows: Array(nPlayer).fill(Array.from(Array(N_COLORS), (x,i) => Array(i+1).fill(EMPTY_TILE_FIELD))),\n\twall: Array(nPlayer).fill(Array.from(Array(N_COLORS), x => Array(N_COLORS).fill(EMPTY_TILE_FIELD))),\n\tpenalties: Array(nPlayer).fill(Array(N_COLORS).fill(0)),\n\tbag: Array(N_COLORS).fill(TILES_PER_COLOR),\n\tusedTiles: Array(N_COLORS).fill(0),\n\tmiddle: Array(N_COLORS).fill(0),\n\trepos: Array(nRepos).fill(Array(TILES_PER_REPO).fill(EMPTY_TILE_FIELD)),\n\tstartingTile: 'middle',\n\tplayerAtTurn: getRandomInt(0, nPlayer),\n\tplayMode: \"predefined\",\n\twallPattern: Array.from(\n\t\tArray(N_COLORS),\n\t\t(y, j) => Array.from(\n\t\t\tArray(N_COLORS),\n\t\t\t(x, i) => (N_COLORS - i + j) % N_COLORS\n\t\t)\n\t),\n};\n*/\n\ninitialState = new matchState();\n\nconst Store = ({children}) => {\n\n\tconst [state, dispatch] = useReducer(Reducer, initialState);\n\treturn (\n\t\t<Context.Provider value={[state, dispatch]}>\n\t\t\t{children}\n\t\t</Context.Provider>\n\t)\n};\n\nexport const Context = createContext(initialState);\nexport default Store;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,YAAT,QAA6B,YAA7B;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAC,YAAY,GAAG,IAAID,UAAJ,EAAf;;AAEA,MAAME,KAAK,GAAG,QAAgB;EAAA;;EAAA,IAAf;IAACC;EAAD,CAAe;EAE7B,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,UAAU,CAACC,OAAD,EAAUG,YAAV,CAApC;EACA,oBACC,QAAC,OAAD,CAAS,QAAT;IAAkB,KAAK,EAAE,CAACG,KAAD,EAAQC,QAAR,CAAzB;IAAA,UACEF;EADF;IAAA;IAAA;IAAA;EAAA,QADD;AAKA,CARD;;GAAMD,K;;KAAAA,K;AAUN,OAAO,MAAMI,OAAO,gBAAGV,aAAa,CAACK,YAAD,CAA7B;AACP,eAAeC,KAAf"},"metadata":{},"sourceType":"module"}