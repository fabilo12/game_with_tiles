{"ast":null,"code":"var _jsxFileName = \"/home/lorenz/programming/azul_create_react_app/src/components/NameInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport { Context } from './Store.js';\nimport './NameInput.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NameInput(props) {\n  _s();\n\n  const [state, dispatch] = useContext(Context);\n  const numPlayerdefault = 2;\n  const [numPlayer, setNumPlayer] = useState(numPlayerdefault);\n\n  if (state.isGameOver) {\n    return;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"nPlayer\",\n      children: \"Select number of players:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 71\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"nPlayer\",\n      id: \"nPlayer\",\n      value: numPlayer,\n      onChange: e => setNumPlayer(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"2\",\n        children: \"2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"3\",\n        children: \"3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"4\",\n        children: \"4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 22\n    }, this), [...Array(Number(numPlayer)).keys()].map(el => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: 'name' + el,\n        children: [\"Name of Player \", el, \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 78\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: 'name' + el,\n        name: 'name' + el\n      }, el, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 86\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 23\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n/*<label htmlFor='name1'>Name of Player 1:</label><br/>\n            <input type='text' id='name1' name='name1'/><br/>\n            <label htmlFor='name2'>Name of Player 2:</label><br/>\n            <input type='text' id='name2' name='name2'/><br/>\n            <label htmlFor='name3' style={maybeHide(numPlayer,[2])}>Name of Player 3:</label><br/>\n            <input type='text' id='name3' name='name3' style={maybeHide(numPlayer,[2])}/><br/>\n            <label htmlFor='name4' style={maybeHide(numPlayer,[2,3])}>Name of Player 4:</label><br/>\n            <input type='text' id='name4' name='name4' style={maybeHide(numPlayer,[2,3])}/><br/>\nfunction maybeHide(numPlayer, toBeHiddenFor) {\n    const hide = toBeHiddenFor.includes(numPlayer);\n    if (hide) {\n        return (\n            {display: 'none'}\n        )\n    } else {\n        return (\n            {display: 'block'}\n        )\n    }\n}*/\n\n_s(NameInput, \"tbrnUsSmnx8B3hi4msih0rR3dNQ=\");\n\n_c = NameInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"NameInput\");","map":{"version":3,"names":["React","useContext","useState","Context","NameInput","props","state","dispatch","numPlayerdefault","numPlayer","setNumPlayer","isGameOver","e","target","value","Array","Number","keys","map","el"],"sources":["/home/lorenz/programming/azul_create_react_app/src/components/NameInput.js"],"sourcesContent":["import React, { useContext, useState } from 'react'\nimport { Context } from './Store.js'\nimport './NameInput.css'\n\nexport default function NameInput(props) {\n\n\tconst [state, dispatch] = useContext(Context);\n    const numPlayerdefault = 2;\n    const [numPlayer, setNumPlayer] = useState(numPlayerdefault);\n\n    if (state.isGameOver) {\n        return\n    }\n\n    return (\n        <form>\n            <label htmlFor='nPlayer'>Select number of players:</label><br/>\n            <select \n                name='nPlayer' \n                id='nPlayer' \n                value={numPlayer} \n                onChange={\n                    e => setNumPlayer(e.target.value)\n                }\n            >\n                <option value='2'>2</option>\n                <option value='3'>3</option>\n                <option value='4'>4</option>\n            </select><br/>\n            {[...Array(Number(numPlayer)).keys()].map( \n                el => <React.Fragment>\n                    <label htmlFor={'name' + el}>Name of Player {el}:</label><br/>\n                    <input key={el} type='text' id={'name' + el} name={'name' + el}/><br/>\n                </React.Fragment>\n            )}\n        </form>\n    )\n}\n\n/*<label htmlFor='name1'>Name of Player 1:</label><br/>\n            <input type='text' id='name1' name='name1'/><br/>\n            <label htmlFor='name2'>Name of Player 2:</label><br/>\n            <input type='text' id='name2' name='name2'/><br/>\n            <label htmlFor='name3' style={maybeHide(numPlayer,[2])}>Name of Player 3:</label><br/>\n            <input type='text' id='name3' name='name3' style={maybeHide(numPlayer,[2])}/><br/>\n            <label htmlFor='name4' style={maybeHide(numPlayer,[2,3])}>Name of Player 4:</label><br/>\n            <input type='text' id='name4' name='name4' style={maybeHide(numPlayer,[2,3])}/><br/>\nfunction maybeHide(numPlayer, toBeHiddenFor) {\n    const hide = toBeHiddenFor.includes(numPlayer);\n    if (hide) {\n        return (\n            {display: 'none'}\n        )\n    } else {\n        return (\n            {display: 'block'}\n        )\n    }\n}*/"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,OAAO,iBAAP;;AAEA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;EAAA;;EAExC,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,UAAU,CAACE,OAAD,CAApC;EACG,MAAMK,gBAAgB,GAAG,CAAzB;EACA,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAACM,gBAAD,CAA1C;;EAEA,IAAIF,KAAK,CAACK,UAAV,EAAsB;IAClB;EACH;;EAED,oBACI;IAAA,wBACI;MAAO,OAAO,EAAC,SAAf;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAC8D;MAAA;MAAA;MAAA;IAAA,QAD9D,eAEI;MACI,IAAI,EAAC,SADT;MAEI,EAAE,EAAC,SAFP;MAGI,KAAK,EAAEF,SAHX;MAII,QAAQ,EACJG,CAAC,IAAIF,YAAY,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CALzB;MAAA,wBAQI;QAAQ,KAAK,EAAC,GAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QARJ,eASI;QAAQ,KAAK,EAAC,GAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QATJ,eAUI;QAAQ,KAAK,EAAC,GAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAVJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ,eAaa;MAAA;MAAA;MAAA;IAAA,QAbb,EAcK,CAAC,GAAGC,KAAK,CAACC,MAAM,CAACP,SAAD,CAAP,CAAL,CAAyBQ,IAAzB,EAAJ,EAAqCC,GAArC,CACGC,EAAE,iBAAI,QAAC,KAAD,CAAO,QAAP;MAAA,wBACF;QAAO,OAAO,EAAE,SAASA,EAAzB;QAAA,8BAA6CA,EAA7C;MAAA;QAAA;QAAA;QAAA;MAAA,QADE,eACuD;QAAA;QAAA;QAAA;MAAA,QADvD,eAEF;QAAgB,IAAI,EAAC,MAArB;QAA4B,EAAE,EAAE,SAASA,EAAzC;QAA6C,IAAI,EAAE,SAASA;MAA5D,GAAYA,EAAZ;QAAA;QAAA;QAAA;MAAA,QAFE,eAE+D;QAAA;QAAA;QAAA;MAAA,QAF/D;IAAA;MAAA;MAAA;MAAA;IAAA,QADT,CAdL;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAuBH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;GAtDwBf,S;;KAAAA,S"},"metadata":{},"sourceType":"module"}