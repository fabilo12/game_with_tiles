{"ast":null,"code":"import addArrays from '../js_utils/addArrays.js';\nimport tileColToDist from '../azul_lib/tileColToDist.js';\nexport default function putTilesIntoRow(state, payload) {\n  const newState = { ...state\n  };\n  const drawn = newState.repos[newState.selectedTiles.repo].filter(el => el === newState.selectedTiles.color);\n  const rest = tileColToDist(newState.repos[newState.selectedTiles.repo].filter(el => el !== newState.selectedTiles.color), newState.nColor);\n  const targetRow = newState.rows[newState.playerAtTurn][payload.row];\n  const newTargetRow = addDrawnToTarget(drawn, targetRow, newState);\n  newState.rows[newState.playerAtTurn][payload.row] = newTargetRow.newRow;\n  newState.penalties[newState.playerAtTurn] = addArrays(newState.penalties[newState.playerAtTurn], newTargetRow.penalties);\n  newState.middle = addArrays(newState.middle, rest);\n  newState.repos[newState.selectedTiles.repo] = Array(newState.tilesPerRepo).fill(newState.emptyTileField);\n  return newState;\n}\n\nfunction addDrawnToTarget(drawn, targetRow, st) {\n  const nTileInRow = targetRow.filter(el => el === drawn[0]).length;\n  const nDrawn = drawn.length;\n  const auxFilled = Array(Math.min(nTileInRow + nDrawn, targetRow.length)).fill(drawn[0]);\n  console.log(auxFilled);\n  const auxEmpty = Array(targetRow.length - auxFilled.length).fill(st.emptyTileField);\n  return {\n    newRow: auxFilled.concat(auxEmpty),\n    penalties: tileColToDist(Array(Math.max(0, nDrawn - (targetRow.length - nTileInRow))).fill(drawn[0]), st.nColor)\n  };\n} //function checkTargetValidity(selectedColor,targetColor,wall) {\n//\n//}","map":{"version":3,"names":["addArrays","tileColToDist","putTilesIntoRow","state","payload","newState","drawn","repos","selectedTiles","repo","filter","el","color","rest","nColor","targetRow","rows","playerAtTurn","row","newTargetRow","addDrawnToTarget","newRow","penalties","middle","Array","tilesPerRepo","fill","emptyTileField","st","nTileInRow","length","nDrawn","auxFilled","Math","min","console","log","auxEmpty","concat","max"],"sources":["/home/lorenz/programming/azul_create_react_app/src/reducer/putTilesIntoRow.js"],"sourcesContent":["import addArrays from '../js_utils/addArrays.js'\nimport tileColToDist from '../azul_lib/tileColToDist.js'\n\nexport default function putTilesIntoRow(state, payload) {\n\n\tconst newState = { ...state };\n\n\tconst drawn = newState.repos[newState.selectedTiles.repo].filter(el => el===newState.selectedTiles.color);\n\tconst rest = tileColToDist(newState.repos[newState.selectedTiles.repo].filter(el => el!==newState.selectedTiles.color), newState.nColor);\n\tconst targetRow = newState.rows[newState.playerAtTurn][payload.row];\n\tconst newTargetRow = addDrawnToTarget(drawn, targetRow, newState);\n\n\tnewState.rows[newState.playerAtTurn][payload.row] = newTargetRow.newRow;\n\tnewState.penalties[newState.playerAtTurn] = addArrays(newState.penalties[newState.playerAtTurn],newTargetRow.penalties);\n\tnewState.middle = addArrays(newState.middle, rest)\n\tnewState.repos[newState.selectedTiles.repo] = Array(newState.tilesPerRepo).fill(newState.emptyTileField);\n\n\treturn newState\n}\n\nfunction addDrawnToTarget(drawn, targetRow, st) {\n\tconst nTileInRow = targetRow.filter(el => el===drawn[0]).length;\n\tconst nDrawn = drawn.length;\n\tconst auxFilled = Array(Math.min(nTileInRow+nDrawn,targetRow.length)).fill(drawn[0]);\n\tconsole.log(auxFilled)\n\tconst auxEmpty = Array(targetRow.length-auxFilled.length).fill(st.emptyTileField);\n\treturn {\n\t\tnewRow: auxFilled.concat(auxEmpty),\n\t\tpenalties: tileColToDist(Array(Math.max(0,nDrawn-(targetRow.length-nTileInRow))).fill(drawn[0]), st.nColor),\n\t}\n}\n\n//function checkTargetValidity(selectedColor,targetColor,wall) {\n//\n//}\n"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,0BAAtB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AAEA,eAAe,SAASC,eAAT,CAAyBC,KAAzB,EAAgCC,OAAhC,EAAyC;EAEvD,MAAMC,QAAQ,GAAG,EAAE,GAAGF;EAAL,CAAjB;EAEA,MAAMG,KAAK,GAAGD,QAAQ,CAACE,KAAT,CAAeF,QAAQ,CAACG,aAAT,CAAuBC,IAAtC,EAA4CC,MAA5C,CAAmDC,EAAE,IAAIA,EAAE,KAAGN,QAAQ,CAACG,aAAT,CAAuBI,KAArF,CAAd;EACA,MAAMC,IAAI,GAAGZ,aAAa,CAACI,QAAQ,CAACE,KAAT,CAAeF,QAAQ,CAACG,aAAT,CAAuBC,IAAtC,EAA4CC,MAA5C,CAAmDC,EAAE,IAAIA,EAAE,KAAGN,QAAQ,CAACG,aAAT,CAAuBI,KAArF,CAAD,EAA8FP,QAAQ,CAACS,MAAvG,CAA1B;EACA,MAAMC,SAAS,GAAGV,QAAQ,CAACW,IAAT,CAAcX,QAAQ,CAACY,YAAvB,EAAqCb,OAAO,CAACc,GAA7C,CAAlB;EACA,MAAMC,YAAY,GAAGC,gBAAgB,CAACd,KAAD,EAAQS,SAAR,EAAmBV,QAAnB,CAArC;EAEAA,QAAQ,CAACW,IAAT,CAAcX,QAAQ,CAACY,YAAvB,EAAqCb,OAAO,CAACc,GAA7C,IAAoDC,YAAY,CAACE,MAAjE;EACAhB,QAAQ,CAACiB,SAAT,CAAmBjB,QAAQ,CAACY,YAA5B,IAA4CjB,SAAS,CAACK,QAAQ,CAACiB,SAAT,CAAmBjB,QAAQ,CAACY,YAA5B,CAAD,EAA2CE,YAAY,CAACG,SAAxD,CAArD;EACAjB,QAAQ,CAACkB,MAAT,GAAkBvB,SAAS,CAACK,QAAQ,CAACkB,MAAV,EAAkBV,IAAlB,CAA3B;EACAR,QAAQ,CAACE,KAAT,CAAeF,QAAQ,CAACG,aAAT,CAAuBC,IAAtC,IAA8Ce,KAAK,CAACnB,QAAQ,CAACoB,YAAV,CAAL,CAA6BC,IAA7B,CAAkCrB,QAAQ,CAACsB,cAA3C,CAA9C;EAEA,OAAOtB,QAAP;AACA;;AAED,SAASe,gBAAT,CAA0Bd,KAA1B,EAAiCS,SAAjC,EAA4Ca,EAA5C,EAAgD;EAC/C,MAAMC,UAAU,GAAGd,SAAS,CAACL,MAAV,CAAiBC,EAAE,IAAIA,EAAE,KAAGL,KAAK,CAAC,CAAD,CAAjC,EAAsCwB,MAAzD;EACA,MAAMC,MAAM,GAAGzB,KAAK,CAACwB,MAArB;EACA,MAAME,SAAS,GAAGR,KAAK,CAACS,IAAI,CAACC,GAAL,CAASL,UAAU,GAACE,MAApB,EAA2BhB,SAAS,CAACe,MAArC,CAAD,CAAL,CAAoDJ,IAApD,CAAyDpB,KAAK,CAAC,CAAD,CAA9D,CAAlB;EACA6B,OAAO,CAACC,GAAR,CAAYJ,SAAZ;EACA,MAAMK,QAAQ,GAAGb,KAAK,CAACT,SAAS,CAACe,MAAV,GAAiBE,SAAS,CAACF,MAA5B,CAAL,CAAyCJ,IAAzC,CAA8CE,EAAE,CAACD,cAAjD,CAAjB;EACA,OAAO;IACNN,MAAM,EAAEW,SAAS,CAACM,MAAV,CAAiBD,QAAjB,CADF;IAENf,SAAS,EAAErB,aAAa,CAACuB,KAAK,CAACS,IAAI,CAACM,GAAL,CAAS,CAAT,EAAWR,MAAM,IAAEhB,SAAS,CAACe,MAAV,GAAiBD,UAAnB,CAAjB,CAAD,CAAL,CAAwDH,IAAxD,CAA6DpB,KAAK,CAAC,CAAD,CAAlE,CAAD,EAAyEsB,EAAE,CAACd,MAA5E;EAFlB,CAAP;AAIA,C,CAED;AACA;AACA"},"metadata":{},"sourceType":"module"}