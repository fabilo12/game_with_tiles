{"ast":null,"code":"import { getRandomInt } from \"./utils\";\nconst N_COLORS = 5;\nconst TILES_PER_REPO = 4;\nconst TILES_PER_COLOR = 20;\nconst EMPTY_TILE_FIELD = -1;\nconst playerList = ['player1', 'player2', 'player3', 'player4']; //const nPlayer = playerList.length;\n//const nRepos = 2 * nPlayer + 1;\n\nfunction matchState(N_COLORS, TILES_PER_REPO, TILES_PER_COLOR, EMPTY_TILE_FIELD, playerList) {\n  this.nColor = N_COLORS;\n  this.nTilesPerRepo = TILES_PER_REPO;\n  this.tilesPerColor = TILES_PER_COLOR;\n  this.emptyTileField = EMPTY_TILE_FIELD;\n  this.playerList = playerList;\n  this.nPlayer = playerList.length;\n  this.nRepos = 2 * playerList.length + 1;\n  this.scores = Array(nPlayer).fill(0);\n  this.rows = Array(nPlayer).fill(Array.from(Array(N_COLORS), (x, i) => Array(i + 1).fill(EMPTY_TILE_FIELD)));\n  this.wall = Array(nPlayer).fill(Array.from(Array(N_COLORS), x => Array(N_COLORS).fill(EMPTY_TILE_FIELD)));\n  this.penalties = Array(nPlayer).fill(Array(N_COLORS).fill(0));\n  this.bag = Array(N_COLORS).fill(TILES_PER_COLOR);\n  this.usedTiles = Array(N_COLORS).fill(0);\n  this.middle = Array(N_COLORS).fill(0);\n  this.repos = Array(nRepos).fill(Array(TILES_PER_REPO).fill(EMPTY_TILE_FIELD));\n  this.startingTile = 'middle';\n  this.playerAtTurn = getRandomInt(0, nPlayer);\n  this.playMode = \"predefined\";\n  this.wallPattern = Array.from(Array(N_COLORS), (y, j) => Array.from(Array(N_COLORS), (x, i) => (N_COLORS - i + j) % N_COLORS));\n}\n\n;\nexport default matchState;","map":{"version":3,"names":["getRandomInt","N_COLORS","TILES_PER_REPO","TILES_PER_COLOR","EMPTY_TILE_FIELD","playerList","matchState","nColor","nTilesPerRepo","tilesPerColor","emptyTileField","nPlayer","length","nRepos","scores","Array","fill","rows","from","x","i","wall","penalties","bag","usedTiles","middle","repos","startingTile","playerAtTurn","playMode","wallPattern","y","j"],"sources":["/home/lorenz/programming/azul_create_react_app/src/matchState.js"],"sourcesContent":["import { getRandomInt } from \"./utils\";\n\nconst N_COLORS = 5;\nconst TILES_PER_REPO = 4;\nconst TILES_PER_COLOR = 20;\nconst EMPTY_TILE_FIELD = -1;\n\nconst playerList = ['player1', 'player2', 'player3', 'player4'];\n//const nPlayer = playerList.length;\n//const nRepos = 2 * nPlayer + 1;\n\nfunction matchState(\n\tN_COLORS,\n\tTILES_PER_REPO,\n\tTILES_PER_COLOR,\n\tEMPTY_TILE_FIELD,\n\tplayerList\n\t) {\n\tthis.nColor = N_COLORS;\n\tthis.nTilesPerRepo = TILES_PER_REPO;\n\tthis.tilesPerColor = TILES_PER_COLOR;\n\tthis.emptyTileField = EMPTY_TILE_FIELD;\n\tthis.playerList = playerList;\n\tthis.nPlayer = playerList.length;\n\tthis.nRepos = 2 * playerList.length + 1;\n\tthis.scores = Array(nPlayer).fill(0);\n\tthis.rows = Array(nPlayer).fill(Array.from(Array(N_COLORS), (x, i) => Array(i + 1).fill(EMPTY_TILE_FIELD)));\n\tthis.wall = Array(nPlayer).fill(Array.from(Array(N_COLORS), x => Array(N_COLORS).fill(EMPTY_TILE_FIELD)));\n\tthis.penalties = Array(nPlayer).fill(Array(N_COLORS).fill(0));\n\tthis.bag = Array(N_COLORS).fill(TILES_PER_COLOR);\n\tthis.usedTiles = Array(N_COLORS).fill(0);\n\tthis.middle = Array(N_COLORS).fill(0);\n\tthis.repos = Array(nRepos).fill(Array(TILES_PER_REPO).fill(EMPTY_TILE_FIELD));\n\tthis.startingTile = 'middle';\n\tthis.playerAtTurn = getRandomInt(0, nPlayer);\n\tthis.playMode = \"predefined\";\n\tthis.wallPattern = Array.from(\n\t\tArray(N_COLORS),\n\t\t(y, j) => Array.from(\n\t\t\tArray(N_COLORS),\n\t\t\t(x, i) => (N_COLORS - i + j) % N_COLORS\n\t\t)\n\t);\n};\n\n\nexport default matchState"],"mappings":"AAAA,SAASA,YAAT,QAA6B,SAA7B;AAEA,MAAMC,QAAQ,GAAG,CAAjB;AACA,MAAMC,cAAc,GAAG,CAAvB;AACA,MAAMC,eAAe,GAAG,EAAxB;AACA,MAAMC,gBAAgB,GAAG,CAAC,CAA1B;AAEA,MAAMC,UAAU,GAAG,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,CAAnB,C,CACA;AACA;;AAEA,SAASC,UAAT,CACCL,QADD,EAECC,cAFD,EAGCC,eAHD,EAICC,gBAJD,EAKCC,UALD,EAMG;EACF,KAAKE,MAAL,GAAcN,QAAd;EACA,KAAKO,aAAL,GAAqBN,cAArB;EACA,KAAKO,aAAL,GAAqBN,eAArB;EACA,KAAKO,cAAL,GAAsBN,gBAAtB;EACA,KAAKC,UAAL,GAAkBA,UAAlB;EACA,KAAKM,OAAL,GAAeN,UAAU,CAACO,MAA1B;EACA,KAAKC,MAAL,GAAc,IAAIR,UAAU,CAACO,MAAf,GAAwB,CAAtC;EACA,KAAKE,MAAL,GAAcC,KAAK,CAACJ,OAAD,CAAL,CAAeK,IAAf,CAAoB,CAApB,CAAd;EACA,KAAKC,IAAL,GAAYF,KAAK,CAACJ,OAAD,CAAL,CAAeK,IAAf,CAAoBD,KAAK,CAACG,IAAN,CAAWH,KAAK,CAACd,QAAD,CAAhB,EAA4B,CAACkB,CAAD,EAAIC,CAAJ,KAAUL,KAAK,CAACK,CAAC,GAAG,CAAL,CAAL,CAAaJ,IAAb,CAAkBZ,gBAAlB,CAAtC,CAApB,CAAZ;EACA,KAAKiB,IAAL,GAAYN,KAAK,CAACJ,OAAD,CAAL,CAAeK,IAAf,CAAoBD,KAAK,CAACG,IAAN,CAAWH,KAAK,CAACd,QAAD,CAAhB,EAA4BkB,CAAC,IAAIJ,KAAK,CAACd,QAAD,CAAL,CAAgBe,IAAhB,CAAqBZ,gBAArB,CAAjC,CAApB,CAAZ;EACA,KAAKkB,SAAL,GAAiBP,KAAK,CAACJ,OAAD,CAAL,CAAeK,IAAf,CAAoBD,KAAK,CAACd,QAAD,CAAL,CAAgBe,IAAhB,CAAqB,CAArB,CAApB,CAAjB;EACA,KAAKO,GAAL,GAAWR,KAAK,CAACd,QAAD,CAAL,CAAgBe,IAAhB,CAAqBb,eAArB,CAAX;EACA,KAAKqB,SAAL,GAAiBT,KAAK,CAACd,QAAD,CAAL,CAAgBe,IAAhB,CAAqB,CAArB,CAAjB;EACA,KAAKS,MAAL,GAAcV,KAAK,CAACd,QAAD,CAAL,CAAgBe,IAAhB,CAAqB,CAArB,CAAd;EACA,KAAKU,KAAL,GAAaX,KAAK,CAACF,MAAD,CAAL,CAAcG,IAAd,CAAmBD,KAAK,CAACb,cAAD,CAAL,CAAsBc,IAAtB,CAA2BZ,gBAA3B,CAAnB,CAAb;EACA,KAAKuB,YAAL,GAAoB,QAApB;EACA,KAAKC,YAAL,GAAoB5B,YAAY,CAAC,CAAD,EAAIW,OAAJ,CAAhC;EACA,KAAKkB,QAAL,GAAgB,YAAhB;EACA,KAAKC,WAAL,GAAmBf,KAAK,CAACG,IAAN,CAClBH,KAAK,CAACd,QAAD,CADa,EAElB,CAAC8B,CAAD,EAAIC,CAAJ,KAAUjB,KAAK,CAACG,IAAN,CACTH,KAAK,CAACd,QAAD,CADI,EAET,CAACkB,CAAD,EAAIC,CAAJ,KAAU,CAACnB,QAAQ,GAAGmB,CAAX,GAAeY,CAAhB,IAAqB/B,QAFtB,CAFQ,CAAnB;AAOA;;AAAA;AAGD,eAAeK,UAAf"},"metadata":{},"sourceType":"module"}