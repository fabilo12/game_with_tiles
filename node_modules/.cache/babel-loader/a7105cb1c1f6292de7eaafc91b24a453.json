{"ast":null,"code":"var _jsxFileName = \"/home/lorenz/programming/azul_create_react_app/src/components/Info.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { Context } from './Store.js';\nimport './Info.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Info(props) {\n  _s();\n\n  const [state] = useContext(Context);\n  let messages = [];\n\n  if (state.hasOwnProperty('selectedTiles')) {\n    //messages[0] = 'It is ' + state.playerList[state.playerAtTurn] + \"'s turn\"\n    messages[0] = 'Color ' + state.selectedTiles.color + ' selected from ' + state.selectedTiles.repo;\n    messages[1] = 'Please select a target row!';\n  } else {\n    messages[0] = 'Please select tiles!';\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"info-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"info-output\",\n      children: 'It is ' + state.playerList[state.playerAtTurn] + \"'s turn:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 4\n    }, this), messages.map(el => /*#__PURE__*/_jsxDEV(\"output\", {\n      className: \"info-output\",\n      children: el\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 24\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Info, \"m/cH7nSCh9OX4kojlTZiDBEIuJI=\");\n\n_c = Info;\nexport default Info;\n\nvar _c;\n\n$RefreshReg$(_c, \"Info\");","map":{"version":3,"names":["React","useContext","Context","Info","props","state","messages","hasOwnProperty","selectedTiles","color","repo","playerList","playerAtTurn","map","el"],"sources":["/home/lorenz/programming/azul_create_react_app/src/components/Info.js"],"sourcesContent":["\nimport React, { useContext } from 'react'\nimport { Context } from './Store.js'\nimport './Info.css'\n\n\nfunction Info(props) {\n\n\tconst [state] = useContext(Context);\n\tlet messages = [];\n\tif (state.hasOwnProperty('selectedTiles')) {\n\t\t//messages[0] = 'It is ' + state.playerList[state.playerAtTurn] + \"'s turn\"\n\t\tmessages[0] = 'Color ' +\n\t\tstate.selectedTiles.color + \n\t\t' selected from ' +\n\t\tstate.selectedTiles.repo;\n\t\tmessages[1] = 'Please select a target row!';\n\t} else {\n\t\tmessages[0] = 'Please select tiles!';\n\t}\n\t\n\treturn (\n\t\t<div id='info-container'>\n\t\t\t<h4 className='info-output'>{'It is ' + state.playerList[state.playerAtTurn] + \"'s turn:\"}</h4>\n\t\t\t{messages.map(el => <output className='info-output'>{el}</output>)}\n\t\t</div>\n\t)\n}\n\nexport default Info"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,OAAO,YAAP;;;AAGA,SAASC,IAAT,CAAcC,KAAd,EAAqB;EAAA;;EAEpB,MAAM,CAACC,KAAD,IAAUJ,UAAU,CAACC,OAAD,CAA1B;EACA,IAAII,QAAQ,GAAG,EAAf;;EACA,IAAID,KAAK,CAACE,cAAN,CAAqB,eAArB,CAAJ,EAA2C;IAC1C;IACAD,QAAQ,CAAC,CAAD,CAAR,GAAc,WACdD,KAAK,CAACG,aAAN,CAAoBC,KADN,GAEd,iBAFc,GAGdJ,KAAK,CAACG,aAAN,CAAoBE,IAHpB;IAIAJ,QAAQ,CAAC,CAAD,CAAR,GAAc,6BAAd;EACA,CAPD,MAOO;IACNA,QAAQ,CAAC,CAAD,CAAR,GAAc,sBAAd;EACA;;EAED,oBACC;IAAK,EAAE,EAAC,gBAAR;IAAA,wBACC;MAAI,SAAS,EAAC,aAAd;MAAA,UAA6B,WAAWD,KAAK,CAACM,UAAN,CAAiBN,KAAK,CAACO,YAAvB,CAAX,GAAkD;IAA/E;MAAA;MAAA;MAAA;IAAA,QADD,EAEEN,QAAQ,CAACO,GAAT,CAAaC,EAAE,iBAAI;MAAQ,SAAS,EAAC,aAAlB;MAAA,UAAiCA;IAAjC;MAAA;MAAA;MAAA;IAAA,QAAnB,CAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADD;AAMA;;GArBQX,I;;KAAAA,I;AAuBT,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}