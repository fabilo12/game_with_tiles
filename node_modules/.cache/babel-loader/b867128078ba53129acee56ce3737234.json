{"ast":null,"code":"var _jsxFileName = \"/home/lorenz/programming/azul_create_react_app/src/components/Info.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { Context } from './Store.js';\nimport './Info.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Info(props) {\n  _s();\n\n  const [state] = useContext(Context);\n  let messages = [];\n\n  if (state.hasOwnProperty('selectedTiles')) {\n    messages[0] = state.playerList[state.playerAtTurn] + ' selected color ' + state.selectedTiles.color + ' tile(s) from ' + state.selectedTiles.repo;\n  } else {\n    messages[0] = state.playerList[state.playerAtTurn] + ' should select tiles';\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"info-container\",\n    children: messages.map(el => /*#__PURE__*/_jsxDEV(\"output\", {\n      className: \"output\",\n      children: el\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 23\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Info, \"m/cH7nSCh9OX4kojlTZiDBEIuJI=\");\n\n_c = Info;\nexport default Info;\n\nvar _c;\n\n$RefreshReg$(_c, \"Info\");","map":{"version":3,"names":["React","useContext","Context","Info","props","state","messages","hasOwnProperty","playerList","playerAtTurn","selectedTiles","color","repo","map","el"],"sources":["/home/lorenz/programming/azul_create_react_app/src/components/Info.js"],"sourcesContent":["\nimport React, { useContext } from 'react'\nimport { Context } from './Store.js'\nimport './Info.css'\n\n\nfunction Info(props) {\n\n\tconst [state] = useContext(Context);\n\tlet messages = [];\n\tif (state.hasOwnProperty('selectedTiles')) {\n\t\tmessages[0] = \n\t\tstate.playerList[state.playerAtTurn] + \n\t\t' selected color ' +\n\t\tstate.selectedTiles.color + \n\t\t' tile(s) from ' +\n\t\tstate.selectedTiles.repo;\n\t} else {\n\t\tmessages[0] = \n\t\tstate.playerList[state.playerAtTurn] +\n\t\t' should select tiles';\n\t}\n\t\n\treturn (\n\t\t<div id='info-container'>\n\t\t{messages.map(el => <output className='output'>{el}</output>)}\n\t\t</div>\n\t)\n}\n\nexport default Info"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,OAAO,YAAP;;;AAGA,SAASC,IAAT,CAAcC,KAAd,EAAqB;EAAA;;EAEpB,MAAM,CAACC,KAAD,IAAUJ,UAAU,CAACC,OAAD,CAA1B;EACA,IAAII,QAAQ,GAAG,EAAf;;EACA,IAAID,KAAK,CAACE,cAAN,CAAqB,eAArB,CAAJ,EAA2C;IAC1CD,QAAQ,CAAC,CAAD,CAAR,GACAD,KAAK,CAACG,UAAN,CAAiBH,KAAK,CAACI,YAAvB,IACA,kBADA,GAEAJ,KAAK,CAACK,aAAN,CAAoBC,KAFpB,GAGA,gBAHA,GAIAN,KAAK,CAACK,aAAN,CAAoBE,IALpB;EAMA,CAPD,MAOO;IACNN,QAAQ,CAAC,CAAD,CAAR,GACAD,KAAK,CAACG,UAAN,CAAiBH,KAAK,CAACI,YAAvB,IACA,sBAFA;EAGA;;EAED,oBACC;IAAK,EAAE,EAAC,gBAAR;IAAA,UACCH,QAAQ,CAACO,GAAT,CAAaC,EAAE,iBAAI;MAAQ,SAAS,EAAC,QAAlB;MAAA,UAA4BA;IAA5B;MAAA;MAAA;MAAA;IAAA,QAAnB;EADD;IAAA;IAAA;IAAA;EAAA,QADD;AAKA;;GAtBQX,I;;KAAAA,I;AAwBT,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}