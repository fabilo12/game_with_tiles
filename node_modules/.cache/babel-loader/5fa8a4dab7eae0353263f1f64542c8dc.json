{"ast":null,"code":"export function getRandomInt(min, max, n) {\n  const minInt = Math.ceil(min);\n  const maxInt = Math.floor(max);\n  const ssample = Array(n).fill(0).map(() => Math.floor(Math.random() * (maxInt - minInt)) + minInt);\n  return n === 1 ? sample[0] : sample;\n}\nexport function sumArray(numArray) {\n  return numArray.reduce((acc, x) => acc + x, 0);\n}\nexport function addArrays(numArray, addedArray) {\n  return numArray.map((x, i) => x + addedArray[i]);\n}\nexport function tileColl(tileDist) {\n  return tileDist.map((x, i) => Array(x).fill(i)).flat();\n}\nexport function tileDist(tileColl, n) {\n  return [...Array(n).keys()].map(i => tileColl.filter(el => el === i).length);\n}\nexport function getRandomTilesFromBag(bag, n) {\n  const randInts = getRandomInt(0, bag.length - 1, n);\n  return randInts.map(el => bag[el]);\n}","map":{"version":3,"names":["getRandomInt","min","max","n","minInt","Math","ceil","maxInt","floor","ssample","Array","fill","map","random","sample","sumArray","numArray","reduce","acc","x","addArrays","addedArray","i","tileColl","tileDist","flat","keys","filter","el","length","getRandomTilesFromBag","bag","randInts"],"sources":["/home/lorenz/programming/azul_create_react_app/src/utils.js"],"sourcesContent":["export function getRandomInt(min, max, n) {\n\tconst minInt = Math.ceil(min);\n\tconst maxInt = Math.floor(max);\n\tconst ssample = Array(n).fill(0).map(() => Math.floor(Math.random() * (maxInt - minInt)) + minInt);\n\treturn (\n\t\tn === 1 ? sample[0] : sample\n\t);\n}\n\nexport function sumArray(numArray) {\n\treturn (\n\t\tnumArray.reduce((acc, x) => acc + x, 0)\n\t);\n}\n\nexport function addArrays(numArray, addedArray) {\n\treturn (\n\t\tnumArray.map((x, i) => x + addedArray[i])\n\t);\n}\n\nexport function tileColl(tileDist) {\n\treturn (\n\t\ttileDist.map((x, i) => Array(x).fill(i)).flat()\n\t);\n}\n\nexport function tileDist(tileColl, n) {\n\treturn (\n\t\t[...Array(n).keys()].map(i => tileColl.filter(el => (el === i)).length)\n\t);\n}\n\nexport function getRandomTilesFromBag(bag, n) {\n\tconst randInts = getRandomInt(0, bag.length - 1, n);\n\treturn (\n\t\trandInts.map((el) => bag[el])\n\t)\n}"],"mappings":"AAAA,OAAO,SAASA,YAAT,CAAsBC,GAAtB,EAA2BC,GAA3B,EAAgCC,CAAhC,EAAmC;EACzC,MAAMC,MAAM,GAAGC,IAAI,CAACC,IAAL,CAAUL,GAAV,CAAf;EACA,MAAMM,MAAM,GAAGF,IAAI,CAACG,KAAL,CAAWN,GAAX,CAAf;EACA,MAAMO,OAAO,GAAGC,KAAK,CAACP,CAAD,CAAL,CAASQ,IAAT,CAAc,CAAd,EAAiBC,GAAjB,CAAqB,MAAMP,IAAI,CAACG,KAAL,CAAWH,IAAI,CAACQ,MAAL,MAAiBN,MAAM,GAAGH,MAA1B,CAAX,IAAgDA,MAA3E,CAAhB;EACA,OACCD,CAAC,KAAK,CAAN,GAAUW,MAAM,CAAC,CAAD,CAAhB,GAAsBA,MADvB;AAGA;AAED,OAAO,SAASC,QAAT,CAAkBC,QAAlB,EAA4B;EAClC,OACCA,QAAQ,CAACC,MAAT,CAAgB,CAACC,GAAD,EAAMC,CAAN,KAAYD,GAAG,GAAGC,CAAlC,EAAqC,CAArC,CADD;AAGA;AAED,OAAO,SAASC,SAAT,CAAmBJ,QAAnB,EAA6BK,UAA7B,EAAyC;EAC/C,OACCL,QAAQ,CAACJ,GAAT,CAAa,CAACO,CAAD,EAAIG,CAAJ,KAAUH,CAAC,GAAGE,UAAU,CAACC,CAAD,CAArC,CADD;AAGA;AAED,OAAO,SAASC,QAAT,CAAkBC,QAAlB,EAA4B;EAClC,OACCA,QAAQ,CAACZ,GAAT,CAAa,CAACO,CAAD,EAAIG,CAAJ,KAAUZ,KAAK,CAACS,CAAD,CAAL,CAASR,IAAT,CAAcW,CAAd,CAAvB,EAAyCG,IAAzC,EADD;AAGA;AAED,OAAO,SAASD,QAAT,CAAkBD,QAAlB,EAA4BpB,CAA5B,EAA+B;EACrC,OACC,CAAC,GAAGO,KAAK,CAACP,CAAD,CAAL,CAASuB,IAAT,EAAJ,EAAqBd,GAArB,CAAyBU,CAAC,IAAIC,QAAQ,CAACI,MAAT,CAAgBC,EAAE,IAAKA,EAAE,KAAKN,CAA9B,EAAkCO,MAAhE,CADD;AAGA;AAED,OAAO,SAASC,qBAAT,CAA+BC,GAA/B,EAAoC5B,CAApC,EAAuC;EAC7C,MAAM6B,QAAQ,GAAGhC,YAAY,CAAC,CAAD,EAAI+B,GAAG,CAACF,MAAJ,GAAa,CAAjB,EAAoB1B,CAApB,CAA7B;EACA,OACC6B,QAAQ,CAACpB,GAAT,CAAcgB,EAAD,IAAQG,GAAG,CAACH,EAAD,CAAxB,CADD;AAGA"},"metadata":{},"sourceType":"module"}