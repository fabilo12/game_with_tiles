{"ast":null,"code":"import addArrays from '../js_utils/addArrays.js';\nimport tileColToDist from '../azul_lib/tileColToDist.js';\nexport default function putTilesIntoRow(state, payload) {\n  let newState = { ...state\n  };\n  const isValidRow = checkRowValidity(newState, payload);\n\n  if (isValidRow) {\n    newState = processDrawnTiles(newState, payload);\n    newState = putRestToMiddle(newState);\n    newState = emptyRepo(newState);\n    newState = takeStartingTile(newState); //order matters\n\n    newState = deleteSelectedTiles(newState); //order matters\n\n    newState = goToNextPlayer(newState); //order matters\n  } else {\n    alert('Choose another row, please! (Only empty rows or rows with tiles of the same color as the selected tile color are possible!)');\n  }\n\n  return newState;\n}\n\nfunction checkRowValidity(state, payload) {\n  state.selectedTiles.color;\n}\n\nfunction processDrawnTiles(state, payload) {\n  const newState = { ...state\n  };\n  const drawn = newState.repos[newState.selectedTiles.repo].filter(el => el === newState.selectedTiles.color);\n  const targetRow = newState.rows[newState.playerAtTurn][payload.row];\n  const nTileInRow = targetRow.filter(el => el === drawn[0]).length;\n  const nDrawn = drawn.length;\n  const auxFilled = Array(Math.min(nTileInRow + nDrawn, targetRow.length)).fill(drawn[0]);\n  const auxEmpty = Array(targetRow.length - auxFilled.length).fill(state.emptyTileField);\n  newState.rows[newState.playerAtTurn][payload.row] = auxFilled.concat(auxEmpty);\n  newState.penalties[newState.playerAtTurn] = addArrays(newState.penalties[newState.playerAtTurn], tileColToDist(Array(Math.max(0, nDrawn - (targetRow.length - nTileInRow))).fill(drawn[0]), state.nColor));\n  return newState;\n}\n\nfunction putRestToMiddle(state) {\n  const newState = { ...state\n  };\n\n  if (newState.selectedTiles.repo !== newState.nRepos) {\n    const rest = newState.repos[newState.selectedTiles.repo].filter(el => el !== newState.selectedTiles.color);\n    newState.repos[newState.nRepos] = newState.repos.at(-1).concat(rest);\n  }\n\n  return newState;\n}\n\nfunction emptyRepo(state) {\n  const newState = { ...state\n  };\n\n  if (newState.selectedTiles.repo === newState.nRepos) {\n    //tiles taken from middle\n    newState.repos[newState.selectedTiles.repo] = newState.repos[newState.selectedTiles.repo].filter(el => el !== newState.selectedTiles.color);\n  } else {\n    newState.repos[newState.selectedTiles.repo] = Array(newState.tilesPerRepo).fill(newState.emptyTileField);\n  }\n\n  return newState;\n}\n\nfunction takeStartingTile(state) {\n  const newState = { ...state\n  };\n  const startingTileInMiddle = newState.startingTile === 'middle';\n  const drawnFromMiddle = newState.selectedTiles.repo === newState.nRepos;\n\n  if (startingTileInMiddle && drawnFromMiddle) {\n    newState.startingTile = 'player' + newState.playerAtTurn;\n  }\n\n  return newState;\n}\n\nfunction deleteSelectedTiles(state) {\n  const newState = { ...state\n  };\n  delete newState.selectedTiles;\n  return newState;\n}\n\nfunction goToNextPlayer(state) {\n  const newState = { ...state\n  };\n  newState.playerAtTurn = (newState.playerAtTurn + 1) % newState.nPlayer;\n  return newState;\n}","map":{"version":3,"names":["addArrays","tileColToDist","putTilesIntoRow","state","payload","newState","isValidRow","checkRowValidity","processDrawnTiles","putRestToMiddle","emptyRepo","takeStartingTile","deleteSelectedTiles","goToNextPlayer","alert","selectedTiles","color","drawn","repos","repo","filter","el","targetRow","rows","playerAtTurn","row","nTileInRow","length","nDrawn","auxFilled","Array","Math","min","fill","auxEmpty","emptyTileField","concat","penalties","max","nColor","nRepos","rest","at","tilesPerRepo","startingTileInMiddle","startingTile","drawnFromMiddle","nPlayer"],"sources":["/home/lorenz/programming/azul_create_react_app/src/reducer/putTilesIntoRow.js"],"sourcesContent":["import addArrays from '../js_utils/addArrays.js'\nimport tileColToDist from '../azul_lib/tileColToDist.js'\n\nexport default function putTilesIntoRow(state, payload) {\n\n\tlet newState = { ...state };\n\n\tconst isValidRow = checkRowValidity(newState, payload);\n\n\tif (isValidRow) {\n\t\tnewState = processDrawnTiles(newState, payload);\n\t\tnewState = putRestToMiddle(newState);\n\t\tnewState = emptyRepo(newState);\n\t\tnewState = takeStartingTile(newState);//order matters\n\t\tnewState = deleteSelectedTiles(newState);//order matters\n\t\tnewState = goToNextPlayer(newState);//order matters\n\t} else {\n\t\talert('Choose another row, please! (Only empty rows or rows with tiles of the same color as the selected tile color are possible!)')\n\t}\n\n\treturn newState\n}\n\nfunction checkRowValidity(state, payload) {\n\t\n\tstate.selectedTiles.color\n}\n\nfunction processDrawnTiles(state, payload) {\n\n\tconst newState = { ...state };\n\n\tconst drawn = newState.repos[newState.selectedTiles.repo].filter(\n\t\tel => el === newState.selectedTiles.color\n\t);\n\tconst targetRow = newState.rows[newState.playerAtTurn][payload.row];\n\tconst nTileInRow = targetRow.filter(el => el === drawn[0]).length;\n\tconst nDrawn = drawn.length;\n\tconst auxFilled = Array(Math.min(nTileInRow + nDrawn, targetRow.length)).fill(drawn[0]);\n\tconst auxEmpty = Array(targetRow.length - auxFilled.length).fill(state.emptyTileField);\n\tnewState.rows[newState.playerAtTurn][payload.row] = auxFilled.concat(auxEmpty);\n\tnewState.penalties[newState.playerAtTurn] = addArrays(\n\t\tnewState.penalties[newState.playerAtTurn],\n\t\ttileColToDist(\n\t\t\tArray(Math.max(0, nDrawn - (targetRow.length - nTileInRow))).fill(drawn[0]), \n\t\t\tstate.nColor\n\t\t)\n\t);\n\n\treturn newState\n}\n\nfunction putRestToMiddle(state) {\n\n\tconst newState = { ...state };\n\n\tif (newState.selectedTiles.repo !== newState.nRepos) {\n\t\tconst rest = newState.repos[newState.selectedTiles.repo].filter(\n\t\t\tel => el!==newState.selectedTiles.color\n\t\t)\n\t\tnewState.repos[newState.nRepos] = newState.repos.at(-1).concat(rest);\n\t}\n\n\treturn newState\n}\n\nfunction emptyRepo(state) {\n\t\n\tconst newState = { ...state };\n\n\tif (newState.selectedTiles.repo === newState.nRepos) {//tiles taken from middle\n\t\tnewState.repos[newState.selectedTiles.repo] = \n\t\t\tnewState.repos[newState.selectedTiles.repo].filter(\n\t\t\t\tel => el!==newState.selectedTiles.color\n\t\t\t);\n\t} else {\n\t\tnewState.repos[newState.selectedTiles.repo] = \n\t\tArray(newState.tilesPerRepo).fill(newState.emptyTileField);\n\t}\n\t\n\treturn newState\n}\n\n\nfunction takeStartingTile(state) {\n\n\tconst newState = { ...state };\n\n\tconst startingTileInMiddle = (newState.startingTile === 'middle');\n\tconst drawnFromMiddle = (newState.selectedTiles.repo === newState.nRepos);\n\tif (startingTileInMiddle && drawnFromMiddle) {\n\t\tnewState.startingTile = 'player' + newState.playerAtTurn;\n\t}\n\n\treturn newState\n}\n\nfunction deleteSelectedTiles(state) {\n\n\tconst newState = { ...state };\n\n\tdelete newState.selectedTiles;\n\t\n\treturn newState\n}\n\nfunction goToNextPlayer(state) {\n\n\tconst newState = { ...state };\n\n\tnewState.playerAtTurn = (newState.playerAtTurn + 1) % newState.nPlayer;\n\n\treturn newState\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}