{"ast":null,"code":"import _toConsumableArray from\"/home/lorenz/programming/azul_create_react_app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"/home/lorenz/programming/azul_create_react_app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import finishRound from'../azul_lib/finishRound.js';export default function putTilesIntoRow(state,payload){var newState=_objectSpread({},state);var isValidRow=checkRowValidity(state,payload);if(isValidRow){newState=processDrawnTiles(newState,payload);newState=putRestToMiddle(newState);newState=emptyRepo(newState);newState=takeStartingTile(newState);newState=deleteSelectedTiles(newState);newState=goToNextPlayer(newState);var isRoundOver=newState.repos.every(function(el){return el.every(function(el){return el===newState.emptyTileField;});});if(isRoundOver){newState=finishRound(newState);}}else{alert('Choose another row, please! Only empty rows or rows with tiles of the same color as the selected tile color are possible. Furthermore, rows that were already filled with the selected color are forbidden. If no row is possible, please click on a penalty button!');}return newState;}function checkRowValidity(state,payload){if(!payload.hasOwnProperty('row')){return true;}var rowIsEmpty=state.rows[state.playerAtTurn][payload.row][0]===state.emptyTileField;var rowHasSameColor=state.rows[state.playerAtTurn][payload.row][0]===state.selectedTiles.color;var wallRowContainsColor=state.wall[state.playerAtTurn][payload.row].includes(state.selectedTiles.color);return(rowIsEmpty||rowHasSameColor)&&!wallRowContainsColor;}function processDrawnTiles(state,payload){var _newState$penalties$n;var newState=_objectSpread({},state);var drawn=newState.repos[newState.selectedTiles.repo].filter(function(el){return el===newState.selectedTiles.color;});var targetRow;if(!payload.hasOwnProperty('row')){targetRow=[];}else{targetRow=newState.rows[newState.playerAtTurn][payload.row];}var nTileInRow=targetRow.filter(function(el){return el===drawn[0];}).length;var nDrawn=drawn.length;var auxFilled=Array(Math.min(nTileInRow+nDrawn,targetRow.length)).fill(drawn[0]);var auxEmpty=Array(targetRow.length-auxFilled.length).fill(state.emptyTileField);if(payload.hasOwnProperty('row')){newState.rows[newState.playerAtTurn][payload.row]=auxFilled.concat(auxEmpty);}(_newState$penalties$n=newState.penalties[newState.playerAtTurn]).push.apply(_newState$penalties$n,_toConsumableArray(Array(Math.max(0,nDrawn-(targetRow.length-nTileInRow))).fill(drawn[0])));return newState;}function putRestToMiddle(state){var newState=_objectSpread({},state);if(newState.selectedTiles.repo!==newState.nRepos){var rest=newState.repos[newState.selectedTiles.repo].filter(function(el){return el!==newState.selectedTiles.color;});newState.repos[newState.nRepos]=newState.repos.at(-1).concat(rest);}return newState;}function emptyRepo(state){var newState=_objectSpread({},state);if(newState.selectedTiles.repo===newState.nRepos){//tiles taken from middle\nnewState.repos[newState.selectedTiles.repo]=newState.repos[newState.selectedTiles.repo].filter(function(el){return el!==newState.selectedTiles.color;});}else{newState.repos[newState.selectedTiles.repo]=Array(newState.tilesPerRepo).fill(newState.emptyTileField);}return newState;}function takeStartingTile(state){var newState=_objectSpread({},state);var startingTileInMiddle=newState.startingTile==='middle';var drawnFromMiddle=newState.selectedTiles.repo===newState.nRepos;if(startingTileInMiddle&&drawnFromMiddle){newState.startingTile='player'+newState.playerAtTurn;}return newState;}function deleteSelectedTiles(state){var newState=_objectSpread({},state);delete newState.selectedTiles;return newState;}function goToNextPlayer(state){var newState=_objectSpread({},state);newState.playerAtTurn=(newState.playerAtTurn+1)%newState.nPlayer;return newState;}","map":{"version":3,"names":["finishRound","putTilesIntoRow","state","payload","newState","isValidRow","checkRowValidity","processDrawnTiles","putRestToMiddle","emptyRepo","takeStartingTile","deleteSelectedTiles","goToNextPlayer","isRoundOver","repos","every","el","emptyTileField","alert","hasOwnProperty","rowIsEmpty","rows","playerAtTurn","row","rowHasSameColor","selectedTiles","color","wallRowContainsColor","wall","includes","drawn","repo","filter","targetRow","nTileInRow","length","nDrawn","auxFilled","Array","Math","min","fill","auxEmpty","concat","penalties","push","max","nRepos","rest","at","tilesPerRepo","startingTileInMiddle","startingTile","drawnFromMiddle","nPlayer"],"sources":["/home/lorenz/programming/azul_create_react_app/src/reducer/putTilesIntoRow.js"],"sourcesContent":["import finishRound from '../azul_lib/finishRound.js'\n\nexport default function putTilesIntoRow(state, payload) {\n\n\tlet newState = { ...state };\n\n\tconst isValidRow = checkRowValidity(state, payload);\n\n\tif (isValidRow) {\n\t\tnewState = processDrawnTiles(newState, payload);\n\t\tnewState = putRestToMiddle(newState);\n\t\tnewState = emptyRepo(newState);\n\t\tnewState = takeStartingTile(newState);\n\t\tnewState = deleteSelectedTiles(newState);\n\t\tnewState = goToNextPlayer(newState);\n\t\tconst isRoundOver = newState.repos.every(\n\t\t\tel => el.every(el => el===newState.emptyTileField)\n\t\t);\n\t\tif (isRoundOver) {\n\t\t\tnewState = finishRound(newState);\n\t\t}\n\t} else {\n\t\talert('Choose another row, please! Only empty rows or rows with tiles of the same color as the selected tile color are possible. Furthermore, rows that were already filled with the selected color are forbidden. If no row is possible, please click on a penalty button!')\n\t}\n\n\treturn newState\n}\n\nfunction checkRowValidity(state, payload) {\n\t\n\tif (!payload.hasOwnProperty('row')) {\n\t\treturn true\n\t}\n\tconst rowIsEmpty = (\n\t\tstate.rows[state.playerAtTurn][payload.row][0] === state.emptyTileField\n\t);\n\tconst rowHasSameColor = (\n\t\tstate.rows[state.playerAtTurn][payload.row][0] === state.selectedTiles.color\n\t);\n\tconst wallRowContainsColor = (\n\t\tstate.wall[state.playerAtTurn][payload.row].includes(state.selectedTiles.color)\n\t);\n\n\treturn (rowIsEmpty || rowHasSameColor) && !wallRowContainsColor\n}\n\nfunction processDrawnTiles(state, payload) {\n\n\tconst newState = { ...state };\n\n\tconst drawn = newState.repos[newState.selectedTiles.repo].filter(\n\t\tel => el === newState.selectedTiles.color\n\t);\n\tlet targetRow\n\tif (!payload.hasOwnProperty('row')) {\n\t\ttargetRow = [];\n\t} else {\n\t\ttargetRow = newState.rows[newState.playerAtTurn][payload.row];\n\t}\n\tconst nTileInRow = targetRow.filter(el => el === drawn[0]).length;\n\tconst nDrawn = drawn.length;\n\tconst auxFilled = Array(Math.min(nTileInRow + nDrawn, targetRow.length)).fill(drawn[0]);\n\tconst auxEmpty = Array(targetRow.length - auxFilled.length).fill(state.emptyTileField);\n\tif (payload.hasOwnProperty('row')) {\n\t\tnewState.rows[newState.playerAtTurn][payload.row] = auxFilled.concat(auxEmpty);\n\t}\n\tnewState.penalties[newState.playerAtTurn].push(\n\t\t...Array(Math.max(0, nDrawn - (targetRow.length - nTileInRow))).fill(drawn[0])\n\t);\n\n\treturn newState\n}\n\nfunction putRestToMiddle(state) {\n\n\tconst newState = { ...state };\n\n\tif (newState.selectedTiles.repo !== newState.nRepos) {\n\t\tconst rest = newState.repos[newState.selectedTiles.repo].filter(\n\t\t\tel => el!==newState.selectedTiles.color\n\t\t)\n\t\tnewState.repos[newState.nRepos] = newState.repos.at(-1).concat(rest);\n\t}\n\n\treturn newState\n}\n\nfunction emptyRepo(state) {\n\t\n\tconst newState = { ...state };\n\n\tif (newState.selectedTiles.repo === newState.nRepos) {//tiles taken from middle\n\t\tnewState.repos[newState.selectedTiles.repo] = \n\t\t\tnewState.repos[newState.selectedTiles.repo].filter(\n\t\t\t\tel => el!==newState.selectedTiles.color\n\t\t\t);\n\t} else {\n\t\tnewState.repos[newState.selectedTiles.repo] = \n\t\tArray(newState.tilesPerRepo).fill(newState.emptyTileField);\n\t}\n\t\n\treturn newState\n}\n\n\nfunction takeStartingTile(state) {\n\n\tconst newState = { ...state };\n\n\tconst startingTileInMiddle = (newState.startingTile === 'middle');\n\tconst drawnFromMiddle = (newState.selectedTiles.repo === newState.nRepos);\n\tif (startingTileInMiddle && drawnFromMiddle) {\n\t\tnewState.startingTile = 'player' + newState.playerAtTurn;\n\t}\n\n\treturn newState\n}\n\nfunction deleteSelectedTiles(state) {\n\n\tconst newState = { ...state };\n\n\tdelete newState.selectedTiles;\n\t\n\treturn newState\n}\n\nfunction goToNextPlayer(state) {\n\n\tconst newState = { ...state };\n\n\tnewState.playerAtTurn = (newState.playerAtTurn + 1) % newState.nPlayer;\n\n\treturn newState\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}