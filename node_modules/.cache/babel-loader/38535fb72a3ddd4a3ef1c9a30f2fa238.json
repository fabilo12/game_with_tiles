{"ast":null,"code":"import _toConsumableArray from\"/home/lorenz/programming/game_with_tiles/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/home/lorenz/programming/game_with_tiles/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useContext}from'react';import{Context}from'./Store.js';import'./Info.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Info(){var _useContext=useContext(Context),_useContext2=_slicedToArray(_useContext,1),state=_useContext2[0];var whoseTurn='It is '+state.playerList[state.playerAtTurn].toString()+\"'s turn:\";var stateInfo='';var whatToDo='';if(state.isGameOver){whoseTurn='The game is over.';var maxScore=Math.max.apply(Math,_toConsumableArray(state.scores));var winner=state.playerList.filter(function(_,i){return state.scores[i]===maxScore;});stateInfo=winner.join(' and ')+' win(s) with '+maxScore+' points.';whatToDo='Please click below button to start a new game!';}else if(state.hasOwnProperty('selectedTiles')){var auxRepo=state.selectedTiles.repo==='middle'?'the leftovers':'repository '+state.selectedTiles.repo;stateInfo=state.tileColorNames[state.selectedTiles.color]+' tiles selected from '+auxRepo+'.';whatToDo='Please select a target row!';}else{stateInfo='No tiles selected.';whatToDo='Please select tiles from repository or leftovers!';}return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(\"output\",{className:\"info-output\",children:whoseTurn}),/*#__PURE__*/_jsx(\"output\",{className:\"info-output state-info\",children:stateInfo}),/*#__PURE__*/_jsx(\"output\",{className:\"info-output what-to-do\",children:whatToDo})]});}","map":{"version":3,"names":["React","useContext","Context","Info","state","whoseTurn","playerList","playerAtTurn","toString","stateInfo","whatToDo","isGameOver","maxScore","Math","max","scores","winner","filter","_","i","join","hasOwnProperty","auxRepo","selectedTiles","repo","tileColorNames","color"],"sources":["/home/lorenz/programming/game_with_tiles/src/components/Info.js"],"sourcesContent":["import React, { useContext } from 'react'\nimport { Context } from './Store.js'\nimport './Info.css'\n\nexport default function Info() {\n\n\tconst [state] = useContext(Context);\n\n\tlet whoseTurn = 'It is ' + state.playerList[state.playerAtTurn].toString() + \"'s turn:\";\n\tlet stateInfo = ''\n\tlet whatToDo = '';\n\tif (state.isGameOver) {\n\t\twhoseTurn = 'The game is over.';\n\t\tconst maxScore = Math.max(...state.scores);\n\t    const winner = state.playerList.filter(\n    \t    (_,i) => state.scores[i] === maxScore\n    \t);\n\t\tstateInfo = winner.join(' and ') + ' win(s) with ' + maxScore + ' points.';\n\t\twhatToDo = 'Please click below button to start a new game!';\n\t} else if (state.hasOwnProperty('selectedTiles')) {\n\t\tconst auxRepo = state.selectedTiles.repo==='middle' ? \n\t\t\t'the leftovers' : \n\t\t\t'repository ' + state.selectedTiles.repo;\n\t\tstateInfo = \n\t\t\tstate.tileColorNames[state.selectedTiles.color] + \n\t\t\t' tiles selected from ' +\n\t\t\tauxRepo + '.';\n\t\twhatToDo = 'Please select a target row!';\n\t} else {\n\t\tstateInfo = 'No tiles selected.';\n\t\twhatToDo = 'Please select tiles from repository or leftovers!';\n\t}\n\t\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<output className='info-output'>{whoseTurn}</output>\n\t\t\t<output className='info-output state-info'>{stateInfo}</output>\n\t\t\t<output className='info-output what-to-do'>{whatToDo}</output>\n\t\t</React.Fragment>\n\t)\n}\n"],"mappings":"oQAAA,MAAOA,MAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CACA,OAASC,OAAT,KAAwB,YAAxB,CACA,MAAO,YAAP,C,wFAEA,cAAe,SAASC,KAAT,EAAgB,CAE9B,gBAAgBF,UAAU,CAACC,OAAD,CAA1B,4CAAOE,KAAP,iBAEA,GAAIC,UAAS,CAAG,SAAWD,KAAK,CAACE,UAAN,CAAiBF,KAAK,CAACG,YAAvB,EAAqCC,QAArC,EAAX,CAA6D,UAA7E,CACA,GAAIC,UAAS,CAAG,EAAhB,CACA,GAAIC,SAAQ,CAAG,EAAf,CACA,GAAIN,KAAK,CAACO,UAAV,CAAsB,CACrBN,SAAS,CAAG,mBAAZ,CACA,GAAMO,SAAQ,CAAGC,IAAI,CAACC,GAAL,OAAAD,IAAI,oBAAQT,KAAK,CAACW,MAAd,EAArB,CACG,GAAMC,OAAM,CAAGZ,KAAK,CAACE,UAAN,CAAiBW,MAAjB,CACX,SAACC,CAAD,CAAGC,CAAH,QAASf,MAAK,CAACW,MAAN,CAAaI,CAAb,IAAoBP,QAA7B,EADW,CAAf,CAGHH,SAAS,CAAGO,MAAM,CAACI,IAAP,CAAY,OAAZ,EAAuB,eAAvB,CAAyCR,QAAzC,CAAoD,UAAhE,CACAF,QAAQ,CAAG,gDAAX,CACA,CARD,IAQO,IAAIN,KAAK,CAACiB,cAAN,CAAqB,eAArB,CAAJ,CAA2C,CACjD,GAAMC,QAAO,CAAGlB,KAAK,CAACmB,aAAN,CAAoBC,IAApB,GAA2B,QAA3B,CACf,eADe,CAEf,cAAgBpB,KAAK,CAACmB,aAAN,CAAoBC,IAFrC,CAGAf,SAAS,CACRL,KAAK,CAACqB,cAAN,CAAqBrB,KAAK,CAACmB,aAAN,CAAoBG,KAAzC,EACA,uBADA,CAEAJ,OAFA,CAEU,GAHX,CAIAZ,QAAQ,CAAG,6BAAX,CACA,CATM,IASA,CACND,SAAS,CAAG,oBAAZ,CACAC,QAAQ,CAAG,mDAAX,CACA,CAED,mBACC,MAAC,KAAD,CAAO,QAAP,yBACC,eAAQ,SAAS,CAAC,aAAlB,UAAiCL,SAAjC,EADD,cAEC,eAAQ,SAAS,CAAC,wBAAlB,UAA4CI,SAA5C,EAFD,cAGC,eAAQ,SAAS,CAAC,wBAAlB,UAA4CC,QAA5C,EAHD,GADD,CAOA"},"metadata":{},"sourceType":"module"}