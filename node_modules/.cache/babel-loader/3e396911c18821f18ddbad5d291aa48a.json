{"ast":null,"code":"import sumArray from'../js_utils/sumArray.js';export default function calcPenalty(state,player){var hasStartingTile=state.startingTile==='player'+player.toString()?1:0;var nTiles=state.penalties[player].length+hasStartingTile;var penalty=sumArray(Array(nTiles).fill(0).map(function(x,i){return Math.min(3,Math.ceil((i+2)/3));}//[1,1,2,2,2,3,3,3,3,3,...]\n));return penalty;}","map":{"version":3,"names":["sumArray","calcPenalty","state","player","hasStartingTile","startingTile","toString","nTiles","penalties","length","penalty","Array","fill","map","x","i","Math","min","ceil"],"sources":["/home/lorenz/programming/azul_create_react_app/src/azul_lib/calcPenalty.js"],"sourcesContent":["import sumArray from '../js_utils/sumArray.js'\n\nexport default function calcPenalty(state, player) {\n\t\n\tconst hasStartingTile = (state.startingTile === ('player' + player.toString())) ? 1 : 0;\n\tconst nTiles = state.penalties[player].length + hasStartingTile;\n\tconst penalty = sumArray(\n\t\tArray(nTiles).fill(0).map(\n\t\t\t(x, i) => Math.min(3, Math.ceil((i + 2) / 3))//[1,1,2,2,2,3,3,3,3,3,...]\n\t\t)\n\t)\n\n\treturn penalty\n}\n"],"mappings":"AAAA,MAAOA,SAAP,KAAqB,yBAArB,CAEA,cAAe,SAASC,YAAT,CAAqBC,KAArB,CAA4BC,MAA5B,CAAoC,CAElD,GAAMC,gBAAe,CAAIF,KAAK,CAACG,YAAN,GAAwB,SAAWF,MAAM,CAACG,QAAP,EAApC,CAA0D,CAA1D,CAA8D,CAAtF,CACA,GAAMC,OAAM,CAAGL,KAAK,CAACM,SAAN,CAAgBL,MAAhB,EAAwBM,MAAxB,CAAiCL,eAAhD,CACA,GAAMM,QAAO,CAAGV,QAAQ,CACvBW,KAAK,CAACJ,MAAD,CAAL,CAAcK,IAAd,CAAmB,CAAnB,EAAsBC,GAAtB,CACC,SAACC,CAAD,CAAIC,CAAJ,QAAUC,KAAI,CAACC,GAAL,CAAS,CAAT,CAAYD,IAAI,CAACE,IAAL,CAAU,CAACH,CAAC,CAAG,CAAL,EAAU,CAApB,CAAZ,CAAV,EAA6C;AAD9C,CADuB,CAAxB,CAMA,MAAOL,QAAP,CACA"},"metadata":{},"sourceType":"module"}