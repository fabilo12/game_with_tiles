{"ast":null,"code":"import getRandomInt from '../js_utils/getRandomInt.js';\nimport tileColSplitter from './tileColSplitter.js';\nexport default function fillRepos(state) {\n  const stateCopy = { ...state\n  };\n\n  for (let i in stateCopy.repos) {\n    const filled = false;\n\n    while (!filled) {\n      const randId = getRandomInt(0, stateCopy.bag.length, stateCopy.tilesPerRepo - stateCopy.repos[i].length);\n      const splittedBag = tileColSplitter(stateCopy.bag, randId);\n      stateCopy.repos[i] = splittedBag.drawn;\n      stateCopy.bag = splittedBag.rest;\n\n      if (stateCopy.repos[i].length < stateCopy.tilesPerRepo) {\n        var newState = refillBag(stateCopy);\n      } else {\n        filled = true;\n        var newState = stateCopy;\n      }\n    }\n  }\n\n  return newState;\n}\n\nfunction refillBag(st) {\n  const newSt = { ...st\n  };\n  newSt.bag = newSt.usedTiles;\n  newSt.usedTiles = [];\n  return newSt;\n}","map":{"version":3,"names":["getRandomInt","tileColSplitter","fillRepos","state","stateCopy","i","repos","filled","randId","bag","length","tilesPerRepo","splittedBag","drawn","rest","newState","refillBag","st","newSt","usedTiles"],"sources":["/home/lorenz/programming/azul_create_react_app/src/azul_utils/fillRepos.js"],"sourcesContent":["import getRandomInt from '../js_utils/getRandomInt.js'\nimport tileColSplitter from './tileColSplitter.js'\n\nexport default function fillRepos(state) {\n\n\tconst stateCopy = { ...state };\n\n\tfor (let i in stateCopy.repos) {\n\t\tconst filled = false;\n\t\twhile (!filled) {\n\t\t\tconst randId = getRandomInt(\n\t\t\t\t0,\n\t\t\t\tstateCopy.bag.length,\n\t\t\t\tstateCopy.tilesPerRepo - stateCopy.repos[i].length\n\t\t\t);\n\t\t\tconst splittedBag = tileColSplitter(stateCopy.bag, randId);\n\t\t\tstateCopy.repos[i] = splittedBag.drawn;\n\t\t\tstateCopy.bag = splittedBag.rest;\n\t\t\tif (stateCopy.repos[i].length < stateCopy.tilesPerRepo) {\n\t\t\t\tvar newState = refillBag(stateCopy);\n\t\t\t} else {\n\t\t\t\tfilled = true;\n\t\t\t\tvar newState = stateCopy;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn newState\n}\n\nfunction refillBag(st) {\n\tconst newSt = { ...st };\n\tnewSt.bag = newSt.usedTiles;\n\tnewSt.usedTiles = [];\n\treturn newSt\n}"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,6BAAzB;AACA,OAAOC,eAAP,MAA4B,sBAA5B;AAEA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;EAExC,MAAMC,SAAS,GAAG,EAAE,GAAGD;EAAL,CAAlB;;EAEA,KAAK,IAAIE,CAAT,IAAcD,SAAS,CAACE,KAAxB,EAA+B;IAC9B,MAAMC,MAAM,GAAG,KAAf;;IACA,OAAO,CAACA,MAAR,EAAgB;MACf,MAAMC,MAAM,GAAGR,YAAY,CAC1B,CAD0B,EAE1BI,SAAS,CAACK,GAAV,CAAcC,MAFY,EAG1BN,SAAS,CAACO,YAAV,GAAyBP,SAAS,CAACE,KAAV,CAAgBD,CAAhB,EAAmBK,MAHlB,CAA3B;MAKA,MAAME,WAAW,GAAGX,eAAe,CAACG,SAAS,CAACK,GAAX,EAAgBD,MAAhB,CAAnC;MACAJ,SAAS,CAACE,KAAV,CAAgBD,CAAhB,IAAqBO,WAAW,CAACC,KAAjC;MACAT,SAAS,CAACK,GAAV,GAAgBG,WAAW,CAACE,IAA5B;;MACA,IAAIV,SAAS,CAACE,KAAV,CAAgBD,CAAhB,EAAmBK,MAAnB,GAA4BN,SAAS,CAACO,YAA1C,EAAwD;QACvD,IAAII,QAAQ,GAAGC,SAAS,CAACZ,SAAD,CAAxB;MACA,CAFD,MAEO;QACNG,MAAM,GAAG,IAAT;QACA,IAAIQ,QAAQ,GAAGX,SAAf;MACA;IACD;EACD;;EAED,OAAOW,QAAP;AACA;;AAED,SAASC,SAAT,CAAmBC,EAAnB,EAAuB;EACtB,MAAMC,KAAK,GAAG,EAAE,GAAGD;EAAL,CAAd;EACAC,KAAK,CAACT,GAAN,GAAYS,KAAK,CAACC,SAAlB;EACAD,KAAK,CAACC,SAAN,GAAkB,EAAlB;EACA,OAAOD,KAAP;AACA"},"metadata":{},"sourceType":"module"}