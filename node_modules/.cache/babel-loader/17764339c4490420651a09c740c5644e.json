{"ast":null,"code":"var _jsxFileName = \"/home/lorenz/programming/azul_create_react_app/src/components/Rows.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { Context } from './Store.js';\nimport TileField from './TileField.js';\nimport './Rows.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Rows(props) {\n  _s();\n\n  const [state] = useContext(Context); //console.table(state.rows[props.player])\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"rows-container\",\n    children: state.rows[props.player].map((tileRow, rowId) => /*#__PURE__*/_jsxDEV(TileField, {\n      type: \"rows\",\n      row: rowId,\n      column: state.nColor - 1 - 1,\n      tileColor: color\n    }, rowId.toString(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 6\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Rows, \"m/cH7nSCh9OX4kojlTZiDBEIuJI=\");\n\n_c = Rows;\nexport default Rows;\n\nvar _c;\n\n$RefreshReg$(_c, \"Rows\");","map":{"version":3,"names":["React","useContext","Context","TileField","Rows","props","state","rows","player","map","tileRow","rowId","nColor","color","toString"],"sources":["/home/lorenz/programming/azul_create_react_app/src/components/Rows.js"],"sourcesContent":["import React, { useContext } from 'react'\nimport { Context } from './Store.js'\nimport TileField from './TileField.js'\nimport './Rows.css'\n\nfunction Rows(props) {\n\n\tconst [state] = useContext(Context);\n\n\t//console.table(state.rows[props.player])\n\n\treturn (\n\t\t<div className='rows-container'>\n\t\t\t{/*state.rows[props.player].map(\n\t\t\t\t(tileRow, rowId) => tileRow.map(\n\t\t\t\t\t(color, columnId) => \n\t\t\t\t\t\t<TileField\n\t\t\t\t\t\t\tkey={rowId.toString() + columnId.toString()}\n\t\t\t\t\t\t\ttype='rows'\n\t\t\t\t\t\t\trow={rowId}\n\t\t\t\t\t\t\tcolumn={(state.nColor - 1) - columnId}\n\t\t\t\t\t\t\ttileColor={color}\n\t\t\t\t\t\t/>\n\t\t\t\t)\n\t\t\t)*/}\n\t\t\t{state.rows[props.player].map(\n\t\t\t\t(tileRow, rowId) => \n\t\t\t\t\t<TileField\n\t\t\t\t\t\tkey={rowId.toString()}\n\t\t\t\t\t\ttype='rows'\n\t\t\t\t\t\trow={rowId}\n\t\t\t\t\t\tcolumn={(state.nColor - 1) - 1}\n\t\t\t\t\t\ttileColor={color}\n\t\t\t\t\t/>\n\t\t\t)}\n\t\t</div>\n\t)\n}\n\nexport default Rows"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,OAAO,YAAP;;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;EAAA;;EAEpB,MAAM,CAACC,KAAD,IAAUL,UAAU,CAACC,OAAD,CAA1B,CAFoB,CAIpB;;EAEA,oBACC;IAAK,SAAS,EAAC,gBAAf;IAAA,UAaEI,KAAK,CAACC,IAAN,CAAWF,KAAK,CAACG,MAAjB,EAAyBC,GAAzB,CACA,CAACC,OAAD,EAAUC,KAAV,kBACC,QAAC,SAAD;MAEC,IAAI,EAAC,MAFN;MAGC,GAAG,EAAEA,KAHN;MAIC,MAAM,EAAGL,KAAK,CAACM,MAAN,GAAe,CAAhB,GAAqB,CAJ9B;MAKC,SAAS,EAAEC;IALZ,GACMF,KAAK,CAACG,QAAN,EADN;MAAA;MAAA;MAAA;IAAA,QAFD;EAbF;IAAA;IAAA;IAAA;EAAA,QADD;AA0BA;;GAhCQV,I;;KAAAA,I;AAkCT,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}